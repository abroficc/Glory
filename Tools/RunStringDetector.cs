using System;
using System.IO;
using Inspinia.Tools;

namespace Inspinia.Tools
{
    /// <summary>
    /// ุจุฑูุงูุฌ ูุชุดุบูู ุฃุฏุงุฉ ูุดู ุงููุตูุต ุงููุจูุฑุฉ
    /// </summary>
    public class RunStringDetector
    {
        public static void Main(string[] args)
        {
            Console.WriteLine("๐ ุฃุฏุงุฉ ูุดู ุงููุตูุต ุงููุจูุฑุฉ - Glory77");
            Console.WriteLine("=====================================");
            Console.WriteLine();

            try
            {
                // ุงูุญุตูู ุนูู ูุณุงุฑ ุงููุดุฑูุน
                var projectPath = GetProjectPath(args);
                Console.WriteLine($"๐ ูุญุต ุงููุดุฑูุน: {projectPath}");
                Console.WriteLine();

                // ุฅูุดุงุก ุฃุฏุงุฉ ุงููุญุต
                var detector = new LargeStringDetector(
                    warningThreshold: 1000,  // ุชุญุฐูุฑ ูููุตูุต ุฃูุจุฑ ูู 1000 ุญุฑู
                    errorThreshold: 5000     // ุฎุทุฃ ูููุตูุต ุฃูุจุฑ ูู 5000 ุญุฑู
                );

                // ูุญุต ุงููุดุฑูุน
                Console.WriteLine("๐ ุฌุงุฑู ูุญุต ุงููููุงุช...");
                var results = detector.ScanProject(projectPath);

                // ุทุจุงุนุฉ ุงููุชุงุฆุฌ
                detector.PrintReport(results);

                // ุฅูุดุงุก ุชูุฑูุฑ
                var reportPath = Path.Combine(projectPath, "large-strings-report.md");
                detector.GenerateReport(results, reportPath);

                // ุงูุชุฑุงุญุงุช ููุญู
                if (results.Count > 0)
                {
                    Console.WriteLine("๐ก ุงูุชุฑุงุญุงุช ููุญู:");
                    Console.WriteLine("1. ุงุณุชุฎุฏู StringHelper.CombineStrings() ูุชูุณูู ุงููุตูุต");
                    Console.WriteLine("2. ุงููู ุงููุตูุต ุงููุจูุฑุฉ ุฅูู ูููุงุช ูููุตูุฉ");
                    Console.WriteLine("3. ุงุณุชุฎุฏู Resources ูููุตูุต ุงูุซุงุจุชุฉ");
                    Console.WriteLine("4. ุงุณุชุฎุฏู StringBuilder ูููุตูุต ุงูุฏููุงููููุฉ");
                    Console.WriteLine();
                    Console.WriteLine("๐ ุฑุงุฌุน README.md ูููุฒูุฏ ูู ุงูุชูุงุตูู");
                }

                Console.WriteLine();
                Console.WriteLine("โ ุงูุชูู ุงููุญุต ุจูุฌุงุญ");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"โ ุฎุทุฃ: {ex.Message}");
                Console.WriteLine();
                Console.WriteLine("ุงูุงุณุชุฎุฏุงู:");
                Console.WriteLine("  dotnet run --project Tools/RunStringDetector.cs [ูุณุงุฑ ุงููุดุฑูุน]");
                Console.WriteLine();
                Console.WriteLine("ุฅุฐุง ูู ูุชู ุชุญุฏูุฏ ูุณุงุฑุ ุณูุชู ุงุณุชุฎุฏุงู ุงููุฌูุฏ ุงูุญุงูู");
            }
        }

        /// <summary>
        /// ุงูุญุตูู ุนูู ูุณุงุฑ ุงููุดุฑูุน
        /// </summary>
        private static string GetProjectPath(string[] args)
        {
            if (args.Length > 0 && Directory.Exists(args[0]))
            {
                return Path.GetFullPath(args[0]);
            }

            // ุงูุจุญุซ ุนู ููู .csproj ูู ุงููุฌูุฏ ุงูุญุงูู ุฃู ุงููุฌูุฏุงุช ุงูุฃุจ
            var currentDir = Directory.GetCurrentDirectory();
            var searchDir = currentDir;

            for (int i = 0; i < 5; i++) // ุงูุจุญุซ ูู 5 ูุณุชููุงุช ูุญุฏ ุฃูุตู
            {
                var csprojFiles = Directory.GetFiles(searchDir, "*.csproj");
                if (csprojFiles.Length > 0)
                {
                    return searchDir;
                }

                var parentDir = Directory.GetParent(searchDir);
                if (parentDir == null)
                    break;

                searchDir = parentDir.FullName;
            }

            // ุฅุฐุง ูู ูุชู ุงูุนุซูุฑ ุนูู ููู .csprojุ ุงุณุชุฎุฏู ุงููุฌูุฏ ุงูุญุงูู
            return currentDir;
        }
    }
}
