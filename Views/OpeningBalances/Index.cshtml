@{
    ViewData["Title"] = "الأرصدة الافتتاحية ";
    ViewData["Direction"] = "rtl";
    Layout = "_VerticalLayout";
}

@section styles
{
    <!-- date range picker css -->
    <link href="~/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" type="text/css">
    <!-- flatpickr css -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" type="text/css" href="https://npmcdn.com/flatpickr/dist/themes/material_blue.css">
    
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600&display=swap" rel="stylesheet">

    <!-- UI Polish CSS -->
    <link href="~/css/ui-polish.css" rel="stylesheet" type="text/css">
    
    <!-- Voucher Modal CSS -->
    <link href="~/css/voucher-modal.css" rel="stylesheet" type="text/css">

    <style>
        body[dir="rtl"] * {
            font-family: "Cairo", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
        }
        
        /* تعديل الجدول لإزالة المسافة بين الرأس والمحتوى */
        .table-bordered thead th {
            border-bottom-width: 1px;
        }
        
        .table-bordered tbody tr:first-child td {
            border-top: none;
        }
        
        .table {
            margin-bottom: 0;
        }
        
        /* Select all checkboxes styling */
        .form-check-input:checked {
            background-color: #1ab394;
            border-color: #1ab394;
        }
        
        /* Alert styling for better visibility */
        .alert-warning {
            background-color: #fff3cd;
            border-color: #ffeaa7;
            color: #856404;
        }
        
        .alert-danger {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }
        
        /* Dark mode alert adjustments */
        [data-bs-theme="dark"] .alert-warning {
            background-color: #664d03;
            border-color: #7d5f04;
            color: #ffecb5;
        }
        
        [data-bs-theme="dark"] .alert-danger {
            background-color: #721c24;
            border-color: #842029;
            color: #f8d7da;
        }
        
        /* Calendar icon positioning */
        .date-input-wrapper {
            position: relative;
            width: 100%;
        }
        
        .calendar-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none;
            z-index: 2;
            color: #6b7280;
        }
        
        [data-bs-theme="dark"] .calendar-icon {
            color: #9ca3af;
        }
        
        /* اجعل التقويم فوق المودال */
        .flatpickr-calendar { z-index: 200000 !important; }
        
        /* Popup menu card styles */
        #popupMenuModal .card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
        
        #popupMenuModal .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        #popupMenuModal .card i {
            font-size: 2rem;
        }
        
        #popupMenuModal .card .btn {
            transition: all 0.2s ease-in-out;
        }
        
        #popupMenuModal .card .btn:hover {
            transform: scale(1.05);
        }
        
        /* Modal header styling - using project's primary color */
        .modal-header {
            background-color: #1ab394; /* Project's primary color */
            color: white;
            border-bottom: 1px solid #16987e;
        }
        
        /* Modal title styling */
        .modal-header .modal-title {
            font-weight: 500;
            color: white;
        }
        
        /* Close button styling for modal headers */
        .modal-header .btn-close {
            filter: invert(1) grayscale(100%) brightness(200%);
        }
        
        /* Modal footer styling - using a lighter shade */
        .modal-footer {
            background-color: #f0f8f8; /* Light teal background */
            border-top: 1px solid #d1e8e8;
        }
        
        /* Primary buttons in modals */
        .modal-footer .btn-primary {
            background-color: #1ab394;
            border-color: #1ab394;
        }
        
        .modal-footer .btn-primary:hover {
            background-color: #16987e;
            border-color: #16987e;
        }
        
        /* View account modal specific styles */
        #viewCustomerModal .form-control-plaintext {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            min-height: 38px;
            display: flex;
            align-items: center;
            font-weight: 500;
        }
        
        /* Dark mode adjustments for view modal */
        [data-bs-theme="dark"] #viewCustomerModal .form-control-plaintext {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        /* Consistent button styling across all modals */
        .btn-info {
            background-color: #23c6c8;
            border-color: #23c6c8;
        }
        
        .btn-info:hover {
            background-color: #1ea8aa;
            border-color: #1ea8aa;
        }
        
        /* Dark mode button adjustments */
        [data-bs-theme="dark"] .btn-info {
            background-color: #23c6c8;
            border-color: #23c6c8;
        }
        
        [data-bs-theme="dark"] .btn-info:hover {
            background-color: #1ea8aa;
            border-color: #1ea8aa;
        }
        
        /* RTL adjustments for input group */
        [dir="rtl"] .input-group > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
            margin-left: -1px;
            border-top-left-radius: 0.375rem;
            border-bottom-left-radius: 0.375rem;
        }
        
        [dir="rtl"] .input-group > :not(:last-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
            border-top-right-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }
        
        /* RTL adjustments for date picker */
        [dir="rtl"] .daterangepicker {
            direction: rtl;
            text-align: right;
        }
        
        [dir="rtl"] .daterangepicker .calendar-table {
            direction: rtl;
        }
        
        [dir="rtl"] .daterangepicker .drp-calendar.left {
            float: right;
        }
        
        [dir="rtl"] .daterangepicker .drp-calendar.right {
            float: left;
        }
        
        [dir="rtl"] .daterangepicker .ranges ul {
            direction: rtl;
            text-align: right;
        }
        
        [dir="rtl"] .daterangepicker .ranges li {
            text-align: right;
        }
        
        [dir="rtl"] .daterangepicker .drp-buttons {
            direction: rtl;
            text-align: left;
        }
        
        /* Custom flatpickr calendar styling to match React component */
        .flatpickr-calendar {
            direction: rtl;
            display: block !important; /* Ensure calendar is always displayed */
        }
        
        .flatpickr-calendar .flatpickr-months {
            background: #111827;
            border-bottom: 1px solid #374151;
        }
        
        .flatpickr-calendar .flatpickr-weekdays {
            background: #111827;
            border-bottom: 1px solid #374151;
        }
        
        .flatpickr-calendar .flatpickr-weekday {
            color: #e5e7eb;
        }
        
        .flatpickr-calendar .flatpickr-day {
            color: #e5e7eb;
            border-radius: 8px;
        }
        
        .flatpickr-calendar .flatpickr-day.today {
            border-color: #60a5fa;
        }
        
        .flatpickr-calendar .flatpickr-day.selected {
            background: #2563eb;
            border-color: #2563eb;
            color: #fff;
        }
        
        .flatpickr-calendar .flatpickr-day:hover {
            background: #3b82f6;
            border-color: #3b82f6;
            color: #fff;
        }
        
        /* Light mode flatpickr styling */
        .flatpickr-calendar:not(.dark) {
            background: #ffffff;
            border: 1px solid #d1d5db;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-months {
            background: #f3f4f6;
            border-bottom: 1px solid #d1d5db;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-weekdays {
            background: #f3f4f6;
            border-bottom: 1px solid #d1d5db;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-weekday {
            color: #4b5563;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-day {
            color: #374151;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-day.today {
            border-color: #60a5fa;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-day.selected {
            background: #2563eb;
            border-color: #2563eb;
            color: #fff;
        }
        
        .flatpickr-calendar:not(.dark) .flatpickr-day:hover {
            background: #3b82f6;
            border-color: #3b82f6;
            color: #fff;
        }
        
        /* Dark mode flatpickr styling */
        .dark .flatpickr-calendar {
            background: #0a0a0a;
            border-color: #3f3f46;
            color: #e5e7eb;
        }
        
        .dark .flatpickr-calendar .flatpickr-months {
            background: #111827;
            border-bottom: 1px solid #374151;
        }
        
        .dark .flatpickr-calendar .flatpickr-weekdays {
            background: #111827;
            border-bottom: 1px solid #374151;
        }
        
        .dark .flatpickr-calendar .flatpickr-weekday {
            color: #e5e7eb;
        }
        
        .dark .flatpickr-calendar .flatpickr-day {
            color: #e5e7eb;
            border-radius: 8px;
        }
        
        .dark .flatpickr-calendar .flatpickr-day.today {
            border-color: #60a5fa;
        }
        
        .dark .flatpickr-calendar .flatpickr-day.selected,
        .dark .flatpickr-calendar .flatpickr-day:hover {
            background: #2563eb;
            border-color: #2563eb;
            color: #fff;
        }
        
        /* Enhanced dark mode styling for accounting vouchers modal */
        [data-bs-theme="dark"] #accountingVouchersModal .card {
            background-color: #1e1f27;
            border-color: #293036;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .card-header {
            background-color: #272832;
            border-color: #293036;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .card-body {
            background-color: #1e1f27;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .form-label {
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .form-control,
        [data-bs-theme="dark"] #accountingVouchersModal .form-select {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .form-control:focus,
        [data-bs-theme="dark"] #accountingVouchersModal .form-select:focus {
            background-color: #272832;
            border-color: #1ab394;
            color: #aab8c5;
            box-shadow: 0 0 0 0.25rem rgba(26, 179, 148, 0.25);
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .form-control::placeholder {
            color: #8391a2;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .input-group-text {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .date-picker-input {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .date-picker-input:focus {
            background-color: #272832;
            border-color: #1ab394;
            color: #aab8c5;
            box-shadow: 0 0 0 0.25rem rgba(26, 179, 148, 0.25);
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .is-invalid {
            border-color: #f499a3 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .is-invalid:focus {
            box-shadow: 0 0 0 0.25rem rgba(244, 153, 163, 0.25) !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .modal-header {
            background-color: #1ab394;
            border-color: #16987e;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .modal-footer {
            background-color: #272832;
            border-color: #293036;
        }
        
        [data-bs-theme="dark"] .text-muted {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] .text-danger {
            color: #f499a3 !important;
        }
        
        /* Additional dark mode styling for form elements in accounting vouchers modal */
        [data-bs-theme="dark"] #accountingVouchersModal .border {
            border-color: #293036 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .bg-white\/70 {
            background-color: rgba(39, 40, 50, 0.7) !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .border-slate-300 {
            border-color: #293036 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .text-gray-500 {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .text-gray-900 {
            color: #aab8c5 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .border-gray-300 {
            border-color: #293036 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .bg-white {
            background-color: #272832 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .placeholder-gray-400::-webkit-input-placeholder {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .placeholder-gray-400::-moz-placeholder {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .placeholder-gray-400:-ms-input-placeholder {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .placeholder-gray-400::-ms-input-placeholder {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #accountingVouchersModal .placeholder-gray-400::placeholder {
            color: #8391a2 !important;
        }
        
        /* Light mode styling for edit modal form controls */
        #editCustomerModal .form-control,
        #editCustomerModal .form-select {
            background-color: #ffffff;
            border-color: #d1d5db;
            color: #374151;
        }
        
        #editCustomerModal .form-control:focus,
        #editCustomerModal .form-select:focus {
            background-color: #ffffff;
            border-color: #1ab394;
            color: #374151;
            box-shadow: 0 0 0 0.25rem rgba(26, 179, 148, 0.25);
        }
        
        #editCustomerModal .form-control::placeholder {
            color: #9ca3af;
        }
        
        #editCustomerModal .form-label {
            color: #4b5563;
        }
        
        /* Dark mode styling for edit modal form controls */
        [data-bs-theme="dark"] #editCustomerModal .form-control,
        [data-bs-theme="dark"] #editCustomerModal .form-select {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #editCustomerModal .form-control:focus,
        [data-bs-theme="dark"] #editCustomerModal .form-select:focus {
            background-color: #272832;
            border-color: #1ab394;
            color: #aab8c5;
            box-shadow: 0 0 0 0.25rem rgba(26, 179, 148, 0.25);
        }
        
        [data-bs-theme="dark"] #editCustomerModal .form-control::placeholder {
            color: #8391a2;
        }
        
        [data-bs-theme="dark"] #editCustomerModal .form-label {
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] #editCustomerModal .text-muted {
            color: #8391a2 !important;
        }
        
        [data-bs-theme="dark"] #editCustomerModal .text-danger {
            color: #f499a3 !important;
        }
        
        /* Light mode table styles */
        .table-dark-card {
            background: #fff;
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #e5e7eb;
            box-shadow: 0 4px 20px rgba(0,0,0,.05);
        }

        .table-dark-card table {
            width: 100%;
            border-collapse: collapse;
            color: #374151;
            font-size: 14px;
        }

        .table-dark-card thead {
            background: linear-gradient(180deg, #f3f4f6, #e5e7eb);
        }
        
        .table-dark-card thead th {
            padding: 12px 14px;
            text-align: center;
            font-weight: 600;
            color: #111827;
            border-bottom: 1px solid #d1d5db;
            white-space: nowrap;
        }

        .table-dark-card tbody tr {
            background: #fff;
            transition: background 0.2s;
        }
        
        .table-dark-card tbody tr:nth-child(even) {
            background: #f9fafb;
        }
        
        .table-dark-card tbody tr:hover {
            background: #f3f4f6;
        }
        
        .table-dark-card td {
            padding: 12px 14px;
            text-align: center;
            border-bottom: 1px solid #e5e7eb;
        }

        .btn-more {
            border: 1px solid #d1d5db;
            background: transparent;
            color: #3b82f6;
            padding: 4px 10px;
            border-radius: 6px;
            font-size: 13px;
            cursor: pointer;
        }
        
        .btn-more:hover {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

        /* Dark mode table styles */
        [data-bs-theme="dark"] .table-dark-card {
            background: #111827;
            border: 1px solid #1f2937;
            box-shadow: 0 4px 20px rgba(0,0,0,.4);
        }

        [data-bs-theme="dark"] .table-dark-card table {
            color: #e5e7eb;
        }

        [data-bs-theme="dark"] .table-dark-card thead {
            background: linear-gradient(180deg, #1e293b, #111827);
        }
        
        [data-bs-theme="dark"] .table-dark-card thead th {
            color: #f9fafb;
            border-bottom: 1px solid #374151;
        }

        [data-bs-theme="dark"] .table-dark-card tbody tr {
            background: #111827;
        }
        
        [data-bs-theme="dark"] .table-dark-card tbody tr:nth-child(even) {
            background: #1a2234;
        }
        
        [data-bs-theme="dark"] .table-dark-card tbody tr:hover {
            background: #1f2937;
        }
        
        [data-bs-theme="dark"] .table-dark-card td {
            border-bottom: 1px solid #1f2937;
        }

        [data-bs-theme="dark"] .btn-more {
            border: 1px solid #374151;
            color: #93c5fd;
        }
        
        [data-bs-theme="dark"] .btn-more:hover {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

        /* Light mode pagination */
        .pagination-dark {
            display: flex;
            justify-content: center;
            margin-top: 12px;
            gap: 4px;
        }
        
        .pagination-dark button {
            background: #f9fafb;
            border: 1px solid #e5e7eb;
            color: #111827;
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
        }
        
        .pagination-dark button.active {
            background: #10b981;
            border-color: #10b981;
            color: #fff;
        }
        
        .pagination-dark button:hover:not(.active) {
            background: #2563eb;
            border-color: #2563eb;
            color: #fff;
        }

        /* Dark mode pagination */
        [data-bs-theme="dark"] .pagination-dark button {
            background: #1e293b;
            border: 1px solid #374151;
            color: #f9fafb;
        }
        
        [data-bs-theme="dark"] .pagination-dark button.active {
            background: #10b981;
            border-color: #10b981;
        }
        
        [data-bs-theme="dark"] .pagination-dark button:hover:not(.active) {
            background: #2563eb;
            border-color: #2563eb;
        }

        /* اجعل التقويم فوق أي عناصر أخرى */
        .flatpickr-calendar{z-index:200000 !important;direction:ltr}
        /* لو واجهت الصفحة RTL وأردت تقويم RTL فعّل التالي: */
        [dir="rtl"] .flatpickr-calendar{direction:rtl}

        [dir="rtl"] .flatpickr-calendar{direction:rtl}
        
        /* Ensure Flatpickr calendar is visible and properly positioned */
        .flatpickr-calendar.open {
            display: block !important;
            visibility: visible !important;
        }
        
        /* Additional positioning for modal calendars */
        .modal .flatpickr-calendar {
            position: absolute !important;
        }
        
        /* Searchable dropdown styles */
        /* الحاوية */
        .search-picker-panel {
          position: absolute;
          background: #fff;
          border: 1px solid #ddd;
          border-radius: 6px;
          box-shadow: 0 4px 12px rgba(0,0,0,.15);
          width: 100%;
          max-height: 250px;
          overflow: auto;
          z-index: 20000;
        }
        
        /* Account search field positioning */
        .searchable-field {
          position: relative;
        }
        
        /* Account picker dropdown z-index adjustment */
        .account-picker-dropdown {
          z-index: 200000 !important; /* Above all other elements */
        }

        /* حقل البحث داخل البانل */
        .search-picker-panel .search-picker-search {
          width: 100%;
          border: none;
          border-bottom: 1px solid #ddd;
          padding: 8px 10px;
          outline: none;
        }

        /* قائمة العناصر */
        .search-picker-panel .search-picker-list {
          list-style: none;
          margin: 0;
          padding: 0;
        }

        .search-picker-panel .search-picker-item {
          padding: 8px 10px;
          cursor: pointer;
        }

        .search-picker-panel .search-picker-item:hover,
        .search-picker-panel .search-picker-item.active {
          background: #2563eb;
          color: #fff;
        }

        /* Dark mode styles for searchable dropdown */
        [data-bs-theme="dark"] .search-picker-panel {
          background: #1e1f27;
          border: 1px solid #293036;
        }

        [data-bs-theme="dark"] .search-picker-panel .search-picker-search {
          background: #272832;
          border-bottom: 1px solid #293036;
          color: #aab8c5;
        }

        [data-bs-theme="dark"] .search-picker-panel .search-picker-item {
          color: #aab8c5;
        }

        [data-bs-theme="dark"] .search-picker-panel .search-picker-item:hover,
        [data-bs-theme="dark"] .search-picker-panel .search-picker-item.active {
          background: #2563eb;
          color: #fff;
        }
        
        /* Account picker dropdown styles */
        .account-picker-dropdown {
          position: absolute;
          background: #fff;
          border: 1px solid #ddd;
          border-radius: 6px;
          box-shadow: 0 4px 12px rgba(0,0,0,.15);
          width: 100%;
          max-height: 250px;
          overflow: auto;
          z-index: 200000;
        }
        
        [data-bs-theme="dark"] .account-picker-dropdown {
          background: #1e1f27;
          border: 1px solid #293036;
        }
        
        .account-picker-dropdown .account-search-input {
          width: 100%;
          border: none;
          border-bottom: 1px solid #ddd;
          padding: 8px 10px;
          outline: none;
        }
        
        [data-bs-theme="dark"] .account-picker-dropdown .account-search-input {
          background: #272832;
          border-bottom: 1px solid #293036;
          color: #aab8c5;
        }
        
        .account-picker-dropdown .account-list {
          list-style: none;
          margin: 0;
          padding: 0;
        }
        
        .account-picker-dropdown .account-item {
          padding: 8px 10px;
          cursor: pointer;
        }
        
        .account-picker-dropdown .account-item:hover {
          background: #2563eb;
          color: #fff;
        }
        
        [data-bs-theme="dark"] .account-picker-dropdown .account-item {
          color: #aab8c5;
        }
        
        [data-bs-theme="dark"] .account-picker-dropdown .account-item:hover {
          background: #2563eb;
          color: #fff;
        }
        
        /* Ensure account picker appears above all elements including modals */
        .account-picker-dropdown {
          z-index: 200000 !important;
        }
        
        /* Ensure Flatpickr calendar is visible and properly positioned */
        .flatpickr-calendar.open {
            display: block !important;
            visibility: visible !important;
        }
        
        /* Additional positioning for modal calendars */
        .modal .flatpickr-calendar {
            position: absolute !important;
        }
        
        /* Searchable dropdown styles */
        /* الحاوية */
        .search-picker-panel {
          position: absolute;
          background: #fff;
          border: 1px solid #ddd;
          border-radius: 6px;
          box-shadow: 0 4px 12px rgba(0,0,0,.15);
          width: 100%;
          max-height: 250px;
          overflow: auto;
          z-index: 20000;
        }
    </style>
}

<!-- Filter toggle button -->
<div class="mb-2">
    <button id="toggleFilters" type="button" class="btn btn-primary">
        <i class="ti ti-filter-off me-1"></i><span id="toggleFiltersText">إظهار الفلترة</span>
    </button>
</div>

<!-- Filter section -->
<div class="card mb-3" id="filterSection" style="display: none;">
    <div class="card-body p-2">
        <!-- Filter row -->
        <div class="row g-2 mb-2">
            <div class="col-md-2">
                <div class="searchable-field">
                    <input type="text" class="form-control form-control-sm" placeholder="كل الحسابات" id="filter-all-accounts" readonly>
                </div>
            </div>
            <div class="col-md-2">
                <div class="searchable-field">
                    <input type="text" class="form-control form-control-sm" placeholder="30" id="filter-page-size" readonly>
                </div>
            </div>
            <div class="col-md-2">
                <div class="searchable-field">
                    <input type="text" class="form-control form-control-sm" placeholder="2025" id="filter-year" readonly>
                </div>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-primary btn-sm" id="searchButton">بحث</button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-info btn-sm" id="selectColumnsButton">تحديد الحقول</button>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-success btn-sm" id="printButton">طباعة</button>
            </div>
        </div>
        <div class="row g-2">
            <div class="col-md-12">
                <button type="button" class="btn btn-secondary btn-sm" id="exportExcelButton">تصدير اكسل</button>
                <button type="button" class="btn btn-secondary btn-sm" id="resetFilters">إعادة تعيين</button>
            </div>
        </div>
    </div>
</div>

<!-- Action buttons -->
<div class="mb-3">
    <div class="d-flex gap-2 flex-wrap">
        <a href="#" class="btn btn-sm btn-outline-danger" title="حذف">
            <i class="ti ti-trash"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-success" title="إضافة" data-bs-toggle="modal" data-bs-target="#addVoucherModal">
            <i class="ti ti-plus"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-primary" title="تعديل" id="topEditButton">
            <i class="ti ti-pencil"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-info" title="مشاهدة" id="topViewButton">
            <i class="ti ti-eye"></i>
        </a>
        <!-- New Popup Menu Button -->
        <a href="#" class="btn btn-sm btn-outline-dark" title="قائمة الإجراءات" data-bs-toggle="modal" data-bs-target="#popupMenuModal">
            <i class="ti ti-menu-2"></i>
        </a>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <div class="d-flex align-items-center">
            <h5 class="card-title mb-0 fw-bold">@ViewData["Title"]</h5>
            <div class="me-auto">
                <!-- Refresh button -->
                <button type="button" class="btn btn-sm btn-outline-secondary ms-2" id="refreshBtn" title="تحديث">
                    <i class="ti ti-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="myTable" class="table table-striped table-bordered dt-responsive nowrap w-100">
                <thead>
                    <tr>
                        <th class="text-center" width="40px">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="selectAll">
                            </div>
                        </th>
                        <th>الرقم</th>
                        <th>الحساب</th>
                        <th>مدين</th>
                        <th>دائن</th>
                        <th>العملة</th>
                        <th style="width: 100px; text-align: center;">المزيد</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="text-center">
                            <div class="form-check"><input type="checkbox" class="form-check-input employee-checkbox" value="1"></div>
                        </td>
                        <td>1</td>
                        <td>حساب عميل</td>
                        <td>5000.00</td>
                        <td></td>
                        <td>USD</td>
                        <td style="text-align: center;">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    للمزيد
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="#" data-action="edit"><i class="ti ti-pencil me-1"></i> تعديل</a></li>
                                    <li><a class="dropdown-item" href="#" data-action="view"><i class="ti ti-eye me-1"></i> مشاهدة</a></li>
                                    <li><a class="dropdown-item" href="#"><i class="ti ti-trash me-1"></i> حذف</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="text-center">
                            <div class="form-check"><input type="checkbox" class="form-check-input employee-checkbox" value="2"></div>
                        </td>
                        <td>2</td>
                        <td>حساب مورد</td>
                        <td></td>
                        <td>3000.00</td>
                        <td>EUR</td>
                        <td style="text-align: center;">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    للمزيد
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="#" data-action="edit"><i class="ti ti-pencil me-1"></i> تعديل</a></li>
                                    <li><a class="dropdown-item" href="#" data-action="view"><i class="ti ti-eye me-1"></i> مشاهدة</a></li>
                                    <li><a class="dropdown-item" href="#"><i class="ti ti-trash me-1"></i> حذف</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- New Popup Menu Modal -->
<div class="modal fade" id="popupMenuModal" tabindex="-1" aria-labelledby="popupMenuModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 1200px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="popupMenuModalLabel">قائمة الإجراءات</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Popup Menu Content -->
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12 mb-3">
                            <h6 class="text-primary">الإجراءات المتاحة</h6>
                            <p>اختر الإجراء الذي ترغب في تنفيذه من القائمة التالية:</p>
                        </div>
                    </div>
                    
                    <!-- Action Buttons Grid -->
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-file-plus fs-1 text-primary mb-2"></i>
                                    <h6 class="card-title">إضافة سند</h6>
                                    <p class="card-text">إضافة قيد محاسبي جديد</p>
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addVoucherModal">
                                        <i class="ti ti-plus"></i> إضافة
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-file-export fs-1 text-success mb-2"></i>
                                    <h6 class="card-title">تصدير البيانات</h6>
                                    <p class="card-text">تصدير بيانات السندات إلى ملف</p>
                                    <button type="button" class="btn btn-success">
                                        <i class="ti ti-download"></i> تصدير
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-printer fs-1 text-info mb-2"></i>
                                    <h6 class="card-title">طباعة التقارير</h6>
                                    <p class="card-text">طباعة تقارير السندات</p>
                                    <button type="button" class="btn btn-info">
                                        <i class="ti ti-printer"></i> طباعة
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-search fs-1 text-warning mb-2"></i>
                                    <h6 class="card-title">بحث متقدم</h6>
                                    <p class="card-text">إجراء بحث متقدم في بيانات السندات</p>
                                    <button type="button" class="btn btn-warning">
                                        <i class="ti ti-filter"></i> بحث
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-settings fs-1 text-secondary mb-2"></i>
                                    <h6 class="card-title">إعدادات النظام</h6>
                                    <p class="card-text">ضبط إعدادات السندات</p>
                                    <button type="button" class="btn btn-secondary">
                                        <i class="ti ti-settings"></i> إعدادات
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <i class="ti ti-help fs-1 text-danger mb-2"></i>
                                    <h6 class="card-title">المساعدة</h6>
                                    <p class="card-text">عرض دليل المستخدم ومساعدة النظام</p>
                                    <button type="button" class="btn btn-danger">
                                        <i class="ti ti-help"></i> مساعدة
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
            </div>
        </div>
    </div>
</div>

<!-- ===== نافذة إضافة سند جديد ===== -->
<div class="modal fade voucher-modal" id="addVoucherModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content" dir="rtl">
      <div class="modal-header">
        <h5 class="modal-title">السندات المالية > الأرصدة الافتتاحية</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
      </div>

      <form id="voucherForm">
        <div class="modal-body">

          <!-- (رصيد) -->
          <div class="v-section">
            <div class="v-cap">(رصيد)</div>
            <div class="row g-3">
              <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                  <strong>ملاحظة هامة:</strong> الارصدة الافتتاحية يجب ان تكون بشكل عام اجمالي المدين يساوي اجمالي الدائن لكل حسابات الارصدة الافتتاحية التي ستقوم باضافتها!
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
              </div>
              
              <div class="col-md-12">
                <div class="table-responsive">
                  <table class="table table-bordered table-sm" id="voucherTable">
                    <thead class="table-light">
                      <tr>
                        <th style="width: 30%">الحساب</th>
                        <th style="width: 15%">العملة</th>
                        <th style="width: 20%">مدين</th>
                        <th style="width: 20%">دائن</th>
                        <th style="width: 15%">إجراءات</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>
                          <div class="searchable-field position-relative">
                            <input type="text" class="form-control form-control-sm account-search" placeholder="اختر الحساب" readonly>
                            <!-- Account picker dropdown -->
                            <div class="account-picker-dropdown" style="display: none; position: absolute; z-index: 200000; background: white; border: 1px solid #ddd; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,.15); width: 100%; max-height: 250px; overflow: auto;">
                              <input type="text" class="form-control account-search-input" placeholder="ابحث عن حساب..." style="border: none; border-bottom: 1px solid #ddd; padding: 8px 10px; outline: none;">
                              <div class="account-list" style="list-style: none; margin: 0; padding: 0;"></div>
                            </div>
                          </div>
                        </td>
                        <td>
                          <select class="form-control form-control-sm">
                            <option value="YER">ريال يمني (YER)</option>
                            <option value="SAR">ريال سعودي (SAR)</option>
                            <option value="USD">دولار أمريكي (USD)</option>
                            <option value="NYR">ريال يمني جديد (NYR)</option>
                          </select>
                        </td>
                        <td><input type="number" class="form-control form-control-sm debit-field" placeholder="0.00" step="0.01" min="0"></td>
                        <td><input type="number" class="form-control form-control-sm credit-field" placeholder="0.00" step="0.01" min="0"></td>
                        <td><button type="button" class="btn btn-danger btn-sm remove-row"><i class="ti ti-trash"></i></button></td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              
              <div class="col-md-12">
                <button type="button" class="btn btn-success btn-sm" id="addRowBtn">
                  <i class="ti ti-plus"></i> إضافة حساب
                </button>
              </div>

              <div class="col-md-6">
                <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                  <span>إجمالي المدين:</span>
                  <span id="total-debit">0.00</span>
                </div>
              </div>
              <div class="col-md-6">
                <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                  <span>إجمالي الدائن:</span>
                  <span id="total-credit">0.00</span>
                </div>
              </div>
              
              <div class="col-md-12">
                <div class="d-flex justify-content-between fw-bold p-2 bg-info bg-opacity-10 rounded">
                  <span>الفرق:</span>
                  <span id="total-difference" class="text-danger">0.00</span>
                </div>
              </div>
            </div>
          </div>

        </div>

        <div class="modal-footer">
          <small class="text-muted me-auto">الحقول بعلامة <span class="v-req">*</span> مطلوبة</small>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
          <button type="submit" class="btn btn-primary">حفظ</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- ===== نافذة اختيار الحساب ===== -->
<div class="modal fade" id="accountPickerModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm">
    <div class="modal-content" dir="rtl">
      <div class="modal-header">
        <h5 class="modal-title">اختر حساب</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
      </div>
      <div class="modal-body">
        <!-- حقل البحث -->
        <div class="mb-3">
          <input type="text" class="form-control" id="accountSearchInput" placeholder="ابحث عن حساب...">
        </div>
        
        <!-- قائمة الحسابات -->
        <div class="list-group" id="accountList" style="max-height: 300px; overflow-y: auto;">
          <!-- سيتم ملء القائمة dynamicaly -->
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
      </div>
    </div>
  </div>
</div>

<!-- ===== نافذة تعديل يوميات الموظفين ===== -->
<div class="modal fade voucher-modal" id="editVoucherModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content" dir="rtl">
      <div class="modal-header">
        <h5 class="modal-title">السندات المالية > الأرصدة الافتتاحية</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
      </div>

      <form id="editVoucherForm">
        <div class="modal-body">

          <!-- (رصيد) -->
          <div class="v-section">
            <div class="v-cap">(رصيد)</div>
            <div class="row g-3">
              <div class="col-md-12">
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                  <strong>ملاحظة هامة:</strong> الارصدة الافتتاحية يجب ان تكون بشكل عام اجمالي المدين يساوي اجمالي الدائن لكل حسابات الارصدة الافتتاحية التي ستقوم باضافتها!
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
              </div>
              
              <div class="col-md-12">
                <div class="table-responsive">
                  <table class="table table-bordered table-sm" id="editVoucherTable">
                    <thead class="table-light">
                      <tr>
                        <th style="width: 30%">الحساب</th>
                        <th style="width: 15%">العملة</th>
                        <th style="width: 20%">مدين</th>
                        <th style="width: 20%">دائن</th>
                        <th style="width: 15%">إجراءات</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td>
                          <div class="searchable-field position-relative">
                            <input type="text" class="form-control form-control-sm account-search" placeholder="اختر الحساب" readonly>
                            <!-- Account picker dropdown -->
                            <div class="account-picker-dropdown" style="display: none; position: absolute; z-index: 200000; background: white; border: 1px solid #ddd; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,.15); width: 100%; max-height: 250px; overflow: auto;">
                              <input type="text" class="form-control account-search-input" placeholder="ابحث عن حساب..." style="border: none; border-bottom: 1px solid #ddd; padding: 8px 10px; outline: none;">
                              <div class="account-list" style="list-style: none; margin: 0; padding: 0;"></div>
                            </div>
                          </div>
                        </td>
                        <td>
                          <select class="form-control form-control-sm">
                            <option value="YER">ريال يمني (YER)</option>
                            <option value="SAR">ريال سعودي (SAR)</option>
                            <option value="USD">دولار أمريكي (USD)</option>
                            <option value="NYR">ريال يمني جديد (NYR)</option>
                          </select>
                        </td>
                        <td><input type="number" class="form-control form-control-sm debit-field" placeholder="0.00" step="0.01" min="0"></td>
                        <td><input type="number" class="form-control form-control-sm credit-field" placeholder="0.00" step="0.01" min="0"></td>
                        <td><button type="button" class="btn btn-danger btn-sm remove-row"><i class="ti ti-trash"></i></button></td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              
              <div class="col-md-12">
                <button type="button" class="btn btn-success btn-sm" id="editAddRowBtn">
                  <i class="ti ti-plus"></i> إضافة حساب
                </button>
              </div>

              <div class="col-md-6">
                <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                  <span>إجمالي المدين:</span>
                  <span id="edit-total-debit">0.00</span>
                </div>
              </div>
              <div class="col-md-6">
                <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                  <span>إجمالي الدائن:</span>
                  <span id="edit-total-credit">0.00</span>
                </div>
              </div>
              
              <div class="col-md-12">
                <div class="d-flex justify-content-between fw-bold p-2 bg-info bg-opacity-10 rounded">
                  <span>الفرق:</span>
                  <span id="edit-total-difference" class="text-danger">0.00</span>
                </div>
              </div>
            </div>
          </div>

        </div>

        <div class="modal-footer">
          <small class="text-muted me-auto">الحقول بعلامة <span class="v-req">*</span> مطلوبة</small>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
          <button type="submit" class="btn btn-primary">حفظ التعديلات</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- ===== نافذة مشاهدة السند ===== -->
<div class="modal fade voucher-modal" id="viewVoucherModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-xl">
    <div class="modal-content" dir="rtl">
      <div class="modal-header">
        <h5 class="modal-title">السندات المالية > الأرصدة الافتتاحية</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="إغلاق"></button>
      </div>

      <div class="modal-body">

        <!-- (رصيد) -->
        <div class="v-section">
          <div class="v-cap">(السند)</div>
          <div class="row g-3">
            <div class="col-md-12">
              <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>ملاحظة هامة:</strong> الارصدة الافتتاحية يجب ان تكون بشكل عام اجمالي المدين يساوي اجمالي الدائن لكل حسابات الارصدة الافتتاحية التي ستقوم باضافتها!
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
            </div>
            
            <div class="col-md-12">
              <div class="table-responsive">
                <table class="table table-bordered table-sm" id="viewVoucherTable">
                  <thead class="table-light">
                    <tr>
                      <th style="width: 30%">الحساب</th>
                      <th style="width: 15%">العملة</th>
                      <th style="width: 20%">مدين</th>
                      <th style="width: 20%">دائن</th>
                      <th style="width: 15%">إجراءات</th>
                    </tr>
                  </thead>
                  <tbody>
                    <!-- سيتم ملء الجدول dynamicaly -->
                  </tbody>
                </table>
              </div>
            </div>

            <div class="col-md-6">
              <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                <span>إجمالي المدين:</span>
                <span id="view-total-debit">0.00</span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="d-flex justify-content-between fw-bold p-2 bg-light rounded">
                <span>إجمالي الدائن:</span>
                <span id="view-total-credit">0.00</span>
              </div>
            </div>
            
            <div class="col-md-12">
              <div class="d-flex justify-content-between fw-bold p-2 bg-info bg-opacity-10 rounded">
                <span>الفرق:</span>
                <span id="view-total-difference" class="text-danger">0.00</span>
              </div>
            </div>
          </div>
        </div>

      </div>

      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
        <button type="button" class="btn btn-primary" id="editFromViewBtn">تعديل</button>
      </div>
    </div>
  </div>
</div>

@section scripts {
    <!-- flatpickr Js -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/l10n/ar.js"></script>

    <script>
        // تعريف المتغيرات العامة
        const employees = ["أحمد محمد", "محمد علي", "فاطمة عبدالله", "يوسف أحمد", "سارة حسن"];
        const accounts = [
            "الصندوق الرئيسي / 101",
            "البنك الأهلي / 102", 
            "حساب المبيعات / 103",
            "حساب المصروفات / 104",
            "العملاء / 105",
            "الموردين / 106"
        ];

        $(document).ready(function() {
            // Initialize DataTable مع إصلاحات
            initializeDataTable();
            
            // تهيئة Flatpickr لحقول التاريخ
            initializeDatePickers();
            
            // إعداد معالجات الأحداث
            setupEventHandlers();
            
            // إعداد نظام اختيار حقول الطباعة
            setupPrintColumnsSelector();
            
            // تهيئة القوائم المنسدلة للبحث
            initializeSearchPickers();
            
            // تهيئة نظام اختيار الحسابات
            initializeAccountPickers();
            
            // تهيئة أحداث القوائم المنسدلة
            setupDropdownEvents();
        });

        function initializeDataTable() {
            const dt = $("#myTable").DataTable({
                paging: true, 
                lengthChange: false, 
                searching: false, // تم تعطيل البحث
                ordering: true, 
                info: true, 
                autoWidth: false, 
                responsive: true,
                language: {
                    emptyTable: "لا توجد بيانات",
                    info: "إظهار _START_ إلى _END_ من _TOTAL_ سجل",
                    infoEmpty: "إظهار 0 إلى 0 من 0",
                    infoFiltered: "(تمت تصفية من أصل _MAX_ سجل)",
                    paginate: { 
                        first: "الأولى", 
                        last: "الأخيرة", 
                        next: "التالي", 
                        previous: "السابق" 
                    }
                },
                dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6">>rt<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>'
            });
            
            return dt;
        }

        function initializeDatePickers() {
            // تهيئة Flatpickr لحقول الفلترة - مع معالجة أفضل
            try {
                $(".date-filter").each(function() {
                    const $this = $(this);
                    if ($this.length && !$this.hasClass('flatpickr-input')) {
                        flatpickr(this, {
                            dateFormat: "Y-m-d",
                            allowInput: true,
                            locale: "ar",
                            disableMobile: true,
                            position: "auto right",
                            clickOpens: true,
                            onOpen: function(selectedDates, dateStr, instance) {
                                // تأكد من أن التقويم فوق كل العناصر
                                instance.calendarContainer.style.zIndex = '200000';
                            }
                        });
                    }
                });
                
                console.log('تم تهيئة Flatpickr بنجاح');
            } catch (error) {
                console.error('خطأ في تهيئة Flatpickr:', error);
            }
        }

        function setupEventHandlers() {
            // معالجة إرسال نموذج السند الجديد
            $('#voucherForm').on('submit', function(e) {
                e.preventDefault();
                handleVoucherSubmit($(this), '#addVoucherModal', 'تم إضافة السند بنجاح');
            });
            
            // معالجة إرسال نموذج التعديل
            $('#editVoucherForm').on('submit', function(e) {
                e.preventDefault();
                handleVoucherSubmit($(this), '#editVoucherModal', 'تم حفظ التعديلات بنجاح');
            });
            
            // إضافة صف جديد في نموذج الإضافة
            $('#addRowBtn').on('click', function() {
                addVoucherRow('#voucherTable tbody');
            });
            
            // إضافة صف جديد في نموذج التعديل
            $('#editAddRowBtn').on('click', function() {
                addVoucherRow('#editVoucherTable tbody');
            });
            
            // إزالة صف من الجداول
            $(document).on('click', '.remove-row', function() {
                removeVoucherRow($(this));
            });
            
            // حساب الإجماليات عند إدخال البيانات
            $(document).on('input', '.debit-field, .credit-field', function() {
                calculateTotals($(this).closest('form'));
            });
            
            // تحديد/إلغاء تحديد الكل
            $('#selectAll').click(function() {
                $('.employee-checkbox').prop('checked', this.checked);
            });
            
            // معالجة تغيير التحديد الفردي
            $(document).on('change', '.employee-checkbox', function() {
                updateSelectAllCheckbox();
            });
            
            // أحداث الفلترة
            setupFilterHandlers();
            
            // أحداث الأزرار العلوية
            setupTopButtonsHandlers();
            
            // أحداث القوائم المنسدلة في الجدول
            setupTableDropdownHandlers();
        }

        function handleVoucherSubmit($form, modalId, successMessage) {
            const voucherData = [];
            let isValid = true;
            let hasData = false;
            
            $form.find('tbody tr').each(function() {
                const $row = $(this);
                const account = $row.find('.account-search').val();
                const currency = $row.find('select').val();
                const debit = parseFloat($row.find('.debit-field').val()) || 0;
                const credit = parseFloat($row.find('.credit-field').val()) || 0;
                
                // التحقق من وجود بيانات في الصف
                if (account || debit > 0 || credit > 0) {
                    hasData = true;
                    
                    if (!account) {
                        isValid = false;
                        $row.find('.account-search').addClass('is-invalid');
                    } else {
                        $row.find('.account-search').removeClass('is-invalid');
                    }
                    voucherData.push({ account, currency, debit, credit });
                }
            });
            
            if (!hasData) {
                alert('الرجاء إضافة حساب واحد على الأقل');
                return;
            }
            
            if (!isValid) {
                alert('الرجاء اختيار الحساب لجميع الصفوف التي تحتوي على قيم');
                return;
            }
            
            // التحقق من توازن المدين والدائن
            const totals = calculateFormTotals($form);
            if (Math.abs(totals.debit - totals.credit) > 0.01) {
                if (!confirm('الإجمالي المدين لا يساوي الإجمالي الدائن. هل تريد المتابعة؟')) {
                    return;
                }
            }
            
            // في التطبيق الحقيقي، هنا يتم إرسال البيانات للخادم
            console.log('Voucher data:', voucherData);
            
            $(modalId).modal('hide');
            alert(successMessage);
            
            // إعادة تعيين النموذج
            resetVoucherForm($form);
        }

        function addVoucherRow(tbodySelector) {
            const newRow = `
                <tr>
                    <td>
                        <div class="searchable-field position-relative">
                            <input type="text" class="form-control form-control-sm account-search" placeholder="اختر الحساب" readonly>
                            <div class="account-picker-dropdown" style="display: none; position: absolute; z-index: 200000; background: white; border: 1px solid #ddd; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,.15); width: 100%; max-height: 250px; overflow: auto;">
                                <input type="text" class="form-control account-search-input" placeholder="ابحث عن حساب..." style="border: none; border-bottom: 1px solid #ddd; padding: 8px 10px; outline: none;">
                                <div class="account-list" style="list-style: none; margin: 0; padding: 0;"></div>
                            </div>
                        </div>
                    </td>
                    <td>
                        <select class="form-control form-control-sm">
                            <option value="YER">ريال يمني (YER)</option>
                            <option value="SAR">ريال سعودي (SAR)</option>
                            <option value="USD">دولار أمريكي (USD)</option>
                            <option value="NYR">ريال يمني جديد (NYR)</option>
                        </select>
                    </td>
                    <td><input type="number" class="form-control form-control-sm debit-field" placeholder="0.00" step="0.01" min="0"></td>
                    <td><input type="number" class="form-control form-control-sm credit-field" placeholder="0.00" step="0.01" min="0"></td>
                    <td><button type="button" class="btn btn-danger btn-sm remove-row"><i class="ti ti-trash"></i></button></td>
                </tr>
            `;
            $(tbodySelector).append(newRow);
        }

        function removeVoucherRow($button) {
            const $tableBody = $button.closest('tbody');
            if ($tableBody.find('tr').length > 1) {
                $button.closest('tr').remove();
                calculateTotals($button.closest('form'));
            } else {
                alert('يجب أن يبقى صف واحد على الأقل');
            }
        }

        function calculateTotals($form) {
            const totals = calculateFormTotals($form);
            const formId = $form.attr('id');
            
            if (formId === 'voucherForm') {
                $('#total-debit').text(totals.debit.toFixed(2));
                $('#total-credit').text(totals.credit.toFixed(2));
                $('#total-difference').text(totals.difference.toFixed(2));
                updateDifferenceColor('#total-difference', totals.difference);
            } else if (formId === 'editVoucherForm') {
                $('#edit-total-debit').text(totals.debit.toFixed(2));
                $('#edit-total-credit').text(totals.credit.toFixed(2));
                $('#edit-total-difference').text(totals.difference.toFixed(2));
                updateDifferenceColor('#edit-total-difference', totals.difference);
            }
        }

        function calculateFormTotals($form) {
            let debit = 0, credit = 0;
            $form.find('.debit-field').each(function() {
                debit += parseFloat($(this).val()) || 0;
            });
            $form.find('.credit-field').each(function() {
                credit += parseFloat($(this).val()) || 0;
            });
            const difference = Math.abs(debit - credit);
            return { debit, credit, difference };
        }

        function updateDifferenceColor(selector, difference) {
            const $element = $(selector);
            if (difference > 0.01) {
                $element.addClass('text-danger').removeClass('text-success');
            } else {
                $element.addClass('text-success').removeClass('text-danger');
            }
        }

        function resetVoucherForm($form) {
            $form[0].reset();
            
            // إعادة تعيين الإجماليات
            const formId = $form.attr('id');
            if (formId === 'voucherForm') {
                $('#total-debit').text('0.00');
                $('#total-credit').text('0.00');
                $('#total-difference').text('0.00').removeClass('text-danger text-success');
            } else if (formId === 'editVoucherForm') {
                $('#edit-total-debit').text('0.00');
                $('#edit-total-credit').text('0.00');
                $('#edit-total-difference').text('0.00').removeClass('text-danger text-success');
            }
            
            // إزالة علامات الخطأ
            $form.find('.is-invalid').removeClass('is-invalid');
        }

        function updateSelectAllCheckbox() {
            const $checkboxes = $('.employee-checkbox');
            const $selectAll = $('#selectAll');
            $selectAll.prop('checked', $checkboxes.length === $checkboxes.filter(':checked').length);
        }

        function initializeSearchPickers() {
            // تهيئة القوائم المنسدلة للبحث في قسم الفلترة
            initSearchPicker('#filter-all-accounts', [
                'الصندوق الرئيسي', 
                'البنك الأهلي', 
                'حساب المبيعات', 
                'حساب المصروفات', 
                'العملاء', 
                'الموردين'
            ]);
            
            initSearchPicker('#filter-page-size', ['10', '20', '30', '50', '100']);
            initSearchPicker('#filter-year', ['2020', '2021', '2022', '2023', '2024', '2025']);
        }

        function setupFilterHandlers() {
            // تبديل الفلترة
            $('#toggleFilters').on('click', function() {
                const $filterSection = $('#filterSection');
                const $icon = $(this).find('i');
                const $text = $('#toggleFiltersText');
                
                if ($filterSection.is(':visible')) {
                    $filterSection.slideUp(300);
                    $icon.removeClass('ti-filter-off').addClass('ti-filter');
                    $text.text('إظهار الفلترة');
                } else {
                    $filterSection.slideDown(300);
                    $icon.removeClass('ti-filter').addClass('ti-filter-off');
                    $text.text('إخفاء الفلترة');
                }
            });
            
            // إعادة تعيين الفلتر
            $('#resetFilters').on('click', function() {
                $('#filter-all-accounts').val('');
                $('#filter-page-size').val('30');
                $('#filter-year').val('2025');
            });
            
            // البحث
            $('#searchButton').on('click', function() {
                performSearch();
            });
            
            // تصدير Excel
            $('#exportExcelButton').on('click', function() {
                exportToExcel();
            });
            
            // طباعة
            $('#printButton').on('click', function() {
                printTable();
            });
            
            // تحديد الحقول
            $('#selectColumnsButton').on('click', function() {
                alert('فتح نافذة تحديد الحقول');
                // في التطبيق الحقيقي، هنا يتم فتح نافذة تحديد الحقول
            });
        }

        function performSearch() {
            const filters = {
                description: $('#filter-description').val(),
                account: $('#filter-all-accounts').val(),
                dateFrom: $('#filter-date-from').val(),
                dateTo: $('#filter-date-to').val(),
                pageSize: $('#filter-page-size').val(),
                year: $('#filter-year').val()
            };
            
            console.log('Search filters:', filters);
            // في التطبيق الحقيقي، هنا يتم إرسال الفلاتر للخادم
        }

        function exportToExcel() {
            console.log('Exporting to Excel');
            // في التطبيق الحقيقي، هنا يتم تنفيذ تصدير Excel
        }

        function printTable() {
            console.log('Printing table');
            // في التطبيق الحقيقي، هنا يتم تنفيذ الطباعة
        }

        function setupTopButtonsHandlers() {
            // معالجة زر التعديل العلوي
            $('#topEditButton').on('click', function(e) {
                e.preventDefault();
                const checkedBoxes = $('.employee-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    alert('الرجاء تحديد سجل واحد على الأقل للتعديل');
                    return;
                }
                if (checkedBoxes.length > 1) {
                    alert('الرجاء تحديد سجل واحد فقط للتعديل');
                    return;
                }
                
                // الحصول على بيانات السجل المحدد
                const $row = checkedBoxes.closest('tr');
                const voucherNumber = $row.find('td:nth-child(2)').text();
                const accountName = $row.find('td:nth-child(3)').text();
                const debit = $row.find('td:nth-child(4)').text();
                const credit = $row.find('td:nth-child(5)').text();
                const currency = $row.find('td:nth-child(6)').text();
                
                // ملء نموذج التعديل
                const $editRow = $('#editVoucherTable tbody tr');
                $editRow.find('.account-search').val(accountName);
                $editRow.find('select').val(getCurrencyValue(currency));
                $editRow.find('.debit-field').val(debit);
                $editRow.find('.credit-field').val(credit);
                
                // تحديث الإجماليات
                calculateTotals($('#editVoucherForm'));
                
                // إظهار نافذة التعديل
                $('#editVoucherModal').modal('show');
            });
            
            // معالجة زر المشاهدة العلوي
            $('#topViewButton').on('click', function(e) {
                e.preventDefault();
                const checkedBoxes = $('.employee-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    alert('الرجاء تحديد سجل واحد على الأقل للمشاهدة');
                    return;
                }
                if (checkedBoxes.length > 1) {
                    alert('الرجاء تحديد سجل واحد فقط للمشاهدة');
                    return;
                }
                
                // الحصول على بيانات السجل المحدد
                const $row = checkedBoxes.closest('tr');
                const voucherNumber = $row.find('td:nth-child(2)').text();
                const accountName = $row.find('td:nth-child(3)').text();
                const debit = $row.find('td:nth-child(4)').text();
                const credit = $row.find('td:nth-child(5)').text();
                const currency = $row.find('td:nth-child(6)').text();
                
                // ملء نموذج المشاهدة
                const $viewTableBody = $('#viewVoucherTable tbody');
                $viewTableBody.empty();
                
                const viewRow = `
                    <tr>
                        <td>${accountName}</td>
                        <td>${currency}</td>
                        <td>${debit}</td>
                        <td>${credit}</td>
                        <td></td>
                    </tr>
                `;
                $viewTableBody.append(viewRow);
                
                // تحديث الإجماليات
                $('#view-total-debit').text(debit);
                $('#view-total-credit').text(credit);
                const difference = Math.abs(parseFloat(debit || 0) - parseFloat(credit || 0));
                $('#view-total-difference').text(difference.toFixed(2));
                updateDifferenceColor('#view-total-difference', difference);
                
                // إظهار نافذة المشاهدة
                $('#viewVoucherModal').modal('show');
            });
        }

        function setupTableDropdownHandlers() {
            // معالجة إجراءات القائمة المنسدلة للمزيد
            $(document).on('click', '[data-action="edit"]', function(e) {
                e.preventDefault();
                
                // الحصول على بيانات السجل
                const $row = $(this).closest('tr');
                const voucherNumber = $row.find('td:nth-child(2)').text();
                const accountName = $row.find('td:nth-child(3)').text();
                const debit = $row.find('td:nth-child(4)').text();
                const credit = $row.find('td:nth-child(5)').text();
                const currency = $row.find('td:nth-child(6)').text();
                
                // ملء نموذج التعديل
                const $editRow = $('#editVoucherTable tbody tr');
                $editRow.find('.account-search').val(accountName);
                $editRow.find('select').val(getCurrencyValue(currency));
                $editRow.find('.debit-field').val(debit);
                $editRow.find('.credit-field').val(credit);
                
                // تحديث الإجماليات
                calculateTotals($('#editVoucherForm'));
                
                // إظهار نافذة التعديل
                $('#editVoucherModal').modal('show');
            });
            
            $(document).on('click', '[data-action="view"]', function(e) {
                e.preventDefault();
                
                // الحصول على بيانات السجل
                const $row = $(this).closest('tr');
                const voucherNumber = $row.find('td:nth-child(2)').text();
                const accountName = $row.find('td:nth-child(3)').text();
                const debit = $row.find('td:nth-child(4)').text();
                const credit = $row.find('td:nth-child(5)').text();
                const currency = $row.find('td:nth-child(6)').text();
                
                // ملء نموذج المشاهدة
                const $viewTableBody = $('#viewVoucherTable tbody');
                $viewTableBody.empty();
                
                const viewRow = `
                    <tr>
                        <td>${accountName}</td>
                        <td>${currency}</td>
                        <td>${debit}</td>
                        <td>${credit}</td>
                        <td></td>
                    </tr>
                `;
                $viewTableBody.append(viewRow);
                
                // تحديث الإجماليات
                $('#view-total-debit').text(debit);
                $('#view-total-credit').text(credit);
                const difference = Math.abs(parseFloat(debit || 0) - parseFloat(credit || 0));
                $('#view-total-difference').text(difference.toFixed(2));
                updateDifferenceColor('#view-total-difference', difference);
                
                // إظهار نافذة المشاهدة
                $('#viewVoucherModal').modal('show');
            });
        }
        
        // دالة مساعدة لتحويل اسم العملة إلى قيمة
        function getCurrencyValue(currencyName) {
            const currencyMap = {
                'ريال يمني (YER)': 'YER',
                'ريال سعودي (SAR)': 'SAR',
                'دولار أمريكي (USD)': 'USD',
                'ريال يمني جديد (NYR)': 'NYR',
                'YER': 'YER',
                'SAR': 'SAR',
                'USD': 'USD',
                'NYR': 'NYR'
            };
            return currencyMap[currencyName] || 'YER';
        }

        function initializeSearchPickers() {
            // تهيئة القوائم المنسدلة للبحث في قسم الفلترة
            initSearchPicker('#filter-all-accounts', ['الصندوق الرئيسي', 'البنك الأهلي', 'المبيعات', 'المصروفات', 'العملاء', 'الموردين']);
            initSearchPicker('#filter-page-size', ['10', '20', '30', '50', '100']);
            initSearchPicker('#filter-year', ['2020', '2021', '2022', '2023', '2024', '2025']);
        }

        function initializeAccountPickers() {
            // تهيئة نظام اختيار الحسابات
            // معالجة النقر على حقل اختيار الحساب
            $(document).on('click', '.account-search', function(e) {
                e.stopPropagation();
                
                // إغلاق أي نوافذ منبثقة مفتوحة
                $('.account-picker-dropdown').hide();
                
                const $this = $(this);
                const $dropdown = $this.siblings('.account-picker-dropdown');
                
                // إظهار القائمة المنسدلة أسفل الحقل
                const height = $this.outerHeight();
                
                $dropdown.show().css({
                    top: height + 'px', // Position directly below the input field
                    left: 0,
                    right: 0, // Ensure it spans the full width of the container
                    position: 'absolute',
                    zIndex: 200000 // Use a very high z-index to appear above all other elements
                });
                
                // ملء قائمة الحسابات
                renderAccountDropdown(accounts, $dropdown, $this);
                
                // التركيز على حقل البحث
                $dropdown.find('.account-search-input').focus();
            });
            
            // إغلاق القائمة المنسدلة عند النقر في أي مكان آخر
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.account-search').length && 
                    !$(e.target).closest('.account-picker-dropdown').length) {
                    $('.account-picker-dropdown').hide();
                }
            });
            
            // البحث في نافذة اختيار الحساب
            $(document).on('input', '.account-search-input', function() {
                const $input = $(this);
                const $dropdown = $input.closest('.account-picker-dropdown');
                const $field = $dropdown.siblings('.account-search');
                
                const query = $input.val().toLowerCase();
                const filtered = accounts.filter(acc => acc.toLowerCase().includes(query));
                renderAccountDropdown(filtered, $dropdown, $field);
            });
        }

        // عرض قائمة الحسابات في القائمة المنسدلة
        function renderAccountDropdown(accountList, $dropdown, $field) {
            if (!$dropdown || !$field) return;
            
            const $list = $dropdown.find('.account-list');
            $list.empty();
            
            if (accountList.length === 0) {
                $list.append(`<div class="account-item" style="padding: 8px 10px; color: #8391a2;">لا توجد نتائج</div>`);
                return;
            }
            
            accountList.forEach(acc => {
                const $item = $(`<div class="account-item" style="padding: 8px 10px; cursor: pointer;">${acc}</div>`);
                $item.on('click', function() {
                    $field.val(acc);
                    $dropdown.hide();
                });
                $item.on('mouseenter', function() {
                    $(this).addClass('active');
                });
                $item.on('mouseleave', function() {
                    $(this).removeClass('active');
                });
                $list.append($item);
            });
        }

        function initSearchPicker(inputSelector, items) {
            const $input = $(inputSelector);

            $input.on('focus click', function () {
                openPanel($input, items);
            });

            function openPanel($anchor, items) {
                closeAnyPanel();

                const $panel = $(`
                    <div class="search-picker-panel">
                        <input type="text" class="search-picker-search" placeholder="بحث...">
                        <ul class="search-picker-list"></ul>
                    </div>
                `);

                const $list = $panel.find('.search-picker-list');
                function renderList(filter = '') {
                    $list.empty();
                    const q = filter.trim().toLowerCase();
                    const filtered = !q ? items : items.filter(x => x.toLowerCase().includes(q));
                    if (filtered.length === 0) {
                        $list.append(`<li class="px-3 py-2 text-muted">لا نتائج</li>`);
                        return;
                    }
                    filtered.forEach(txt => {
                        const li = $(`<li class="search-picker-item">${txt}</li>`);
                        li.on('click', function () {
                            $anchor.val(txt);
                            closeAnyPanel();
                        });
                        $list.append(li);
                    });
                }
                renderList();

                // تحديد مكان ظهور البانل أسفل الحقل
                const rect = $anchor[0].getBoundingClientRect();
                const top = window.scrollY + rect.top + $anchor.outerHeight();
                const left = window.scrollX + rect.left;
                $panel.css({
                    top: top + "px",
                    left: left + "px",
                    width: rect.width + "px"
                });

                $('body').append($panel);

                // البحث الحي
                const $search = $panel.find('.search-picker-search');
                $search.on('input', function () {
                    renderList(this.value);
                });

                // إغلاق عند الضغط خارج
                setTimeout(() => {
                    $(document).on('mousedown.searchpicker', function (ev) {
                        if ($(ev.target).closest('.search-picker-panel').length) return;
                        if ($(ev.target).is($anchor)) return;
                        closeAnyPanel();
                    });
                }, 0);
            }

            function closeAnyPanel() {
                $('.search-picker-panel').remove();
                $(document).off('mousedown.searchpicker');
            }
        }

        // إعداد نظام اختيار حقول الطباعة المباشر
        function setupPrintColumnsSelector() {
            const $btnSelectAllColumns = $('#btn-select-all-columns');
            
            // تعريف حقول الجدول مع حالة الاختيار
            const tableColumns = [
                { id: 'id', name: 'الرقم', selected: true },
                { id: 'account', name: 'الحساب', selected: true },
                { id: 'debit', name: 'مدين', selected: true },
                { id: 'credit', name: 'دائن', selected: true },
                { id: 'currency', name: 'العملة', selected: true }
            ];

            // زر اختيار جميع الحقول
            if ($btnSelectAllColumns.length) {
                $btnSelectAllColumns.on('click', function() {
                    // تحديد جميع الحقول
                    tableColumns.forEach(column => {
                        column.selected = true;
                    });
                    
                    // تحديث العلامات على أعمدة الجدول
                    updateTableColumnSelection();
                    
                    // عرض رسالة تأكيد
                    alert('تم تحديد جميع أعمدة الجدول');
                });
            }

            // تحديث علامات الاختيار على أعمدة الجدول
            function updateTableColumnSelection() {
                // الحصول على جميع أعمدة الجدول
                $('#myTable thead th').each(function() {
                    const $th = $(this);
                    const columnText = $th.text().trim();
                    
                    // تجاهل العمود الأول (تحديد الكل) والعمود الأخير (المزيد)
                    if (columnText === '' || columnText === 'المزيد') return;
                    
                    // البحث عن الحقل المطابق
                    const columnObj = tableColumns.find(col => col.name === columnText);
                    
                    if (columnObj) {
                        // إزالة أي علامة موجودة سابقًا
                        $th.find('.selected-column-mark').remove();
                        
                        // إضافة علامة إذا كانت موجودة مختارة
                        if (columnObj.selected) {
                            // Ensure we're using the correct icon class that exists in the project
                            $th.append(' <span class="selected-column-mark text-success"><i class="ti ti-check-circle"></i></span>');
                        }
                    }
                });
            }

            // إضافة حدث النقر على أعمدة الجدول للمباشر
            $('#myTable thead th').each(function() {
                const $th = $(this);
                const columnText = $th.text().trim();
                
                // تجاهل العمود الأول (تحديد الكل) والعمود الأخير (المزيد)
                if (columnText === '' || columnText === 'المزيد') return;
                
                // تحويل العمود إلى قابل للنقر
                $th.css('cursor', 'pointer');
                $th.attr('title', 'انقر للاختيار/الغاء الاختيار');
                
                // إضافة حدث النقر
                $th.on('click', function() {
                    // البحث عن الحقل المطابق
                    const columnObj = tableColumns.find(col => col.name === columnText);
                    
                    if (columnObj) {
                        // تبديل حالة الاختيار
                        columnObj.selected = !columnObj.selected;
                        
                        // تحديث العلامات
                        updateTableColumnSelection();
                    }
                });
            });

            // تهيئة العلامات الأولية
            updateTableColumnSelection();

            // حفظ الاختيارات في متغير مخفي لحساب الطباعة
            function getSelectedColumns() {
                return tableColumns.filter(col => col.selected).map(col => col.id);
            }

            // عند الضغط على زر الطباعة، يمكنك الحصول على الأعمدة المختارة
            // هذه الدالة يمكن استخدامها عند تنفيذ عملية الطباعة
            window.getSelectedPrintColumns = getSelectedColumns;
        }
        
        // تهيئة أحداث القوائم المنسدلة
        function setupDropdownEvents() {
            // معالجة عرض/إخفاء القوائم المنسدلة
            $(document).on('click', '.dropdown-toggle', function(e) {
                e.stopPropagation();
                const $dropdown = $(this).next('.dropdown-menu');
                $('.dropdown-menu').not($dropdown).hide();
                $dropdown.toggle();
            });
            
            // إغلاق القوائم المنسدلة عند النقر في أي مكان آخر
            $(document).on('click', function() {
                $('.dropdown-menu').hide();
            });
        }
    </script>
}