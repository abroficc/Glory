@model Inspinia.Models.MonthlyTransfersIndexVm
@{
    Layout = "_VerticalLayout";
    ViewData["Title"] = "الترحيل الشهري";
    ViewData["Direction"] = "rtl";
}

@section styles {
    <!-- jstree css -->
    <link href="~/plugins/jstree/style.min.css" rel="stylesheet" type="text/css">
    <!-- date range picker css -->
    <link href="~/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" type="text/css">
    <!-- datatables css -->
    <link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css" rel="stylesheet">
    <!-- datatables buttons css -->
    <link href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap5.min.css" rel="stylesheet">
    
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;600&display=swap" rel="stylesheet">
    
    <!-- bootstrap-select CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0-beta3/dist/css/bootstrap-select.min.css" />

    <!-- UI Polish CSS -->
    <link href="~/css/ui-polish.css" rel="stylesheet" type="text/css">
    
    <!-- Voucher Modal CSS -->
    <link href="~/css/voucher-modal.css" rel="stylesheet" type="text/css">
    
    <!-- Payment Distribution Principle CSS -->
    <link href="~/css/payment-distribution-principle.css" rel="stylesheet" type="text/css">
    
    <style>
        body[dir="rtl"] * {
            font-family: "Cairo", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
        }
        
        /* تعديل الجدول لإزالة المسافة بين الرأس والمحتوى */
        .table-bordered thead th {
            border-bottom-width: 1px;
        }
        
        .table-bordered tbody tr:first-child td {
            border-top: none;
        }
        
        .table {
            margin-bottom: 0;
        }
        
        /* Select all checkboxes styling */
        .form-check-input:checked {
            background-color: #1ab394;
            border-color: #1ab394;
        }
        
        /* Alert styling for better visibility */
        .alert-warning {
            background-color: #fff3cd;
            border-color: #ffeaa7;
            color: #856404;
        }
        
        .alert-danger {
            background-color: #f8d7da;
            border-color: #f5c6cb;
            color: #721c24;
        }
        
        /* Dark mode alert adjustments */
        [data-bs-theme="dark"] .alert-warning {
            background-color: #664d03;
            border-color: #7d5f04;
            color: #ffecb5;
        }
        
        [data-bs-theme="dark"] .alert-danger {
            background-color: #721c24;
            border-color: #842029;
            color: #f8d7da;
        }
        
        /* Tree view container */
        #categories-tree {
            min-height: 400px;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
        }
        
        /* Table card styling */
        .table-dark-card {
            background: #fff;
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #e5e7eb;
            box-shadow: 0 4px 20px rgba(0,0,0,.05);
        }

        .table-dark-card table {
            width: 100%;
            border-collapse: collapse;
            color: #374151;
            font-size: 14px;
        }

        .table-dark-card thead {
            background: linear-gradient(180deg, #f3f4f6, #e5e7eb);
        }
        
        .table-dark-card thead th {
            padding: 12px 14px;
            text-align: center;
            font-weight: 600;
            color: #111827;
            border-bottom: 1px solid #d1d5db;
            white-space: nowrap;
        }

        .table-dark-card tbody tr {
            background: #fff;
            transition: background 0.2s;
        }
        
        .table-dark-card tbody tr:nth-child(even) {
            background: #f9fafb;
        }
        
        .table-dark-card tbody tr:hover {
            background: #f3f4f6;
        }
        
        .table-dark-card td {
            padding: 12px 14px;
            text-align: center;
            border-bottom: 1px solid #e5e7eb;
        }

        .btn-more {
            border: 1px solid #d1d5db;
            background: transparent;
            color: #3b82f6;
            padding: 4px 10px;
            border-radius: 6px;
            font-size: 13px;
            cursor: pointer;
        }
        
        .btn-more:hover {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

        /* Dark mode table styles */
        [data-bs-theme="dark"] .table-dark-card {
            background: #111827;
            border: 1px solid #1f2937;
            box-shadow: 0 4px 20px rgba(0,0,0,.4);
        }

        [data-bs-theme="dark"] .table-dark-card table {
            color: #e5e7eb;
        }

        [data-bs-theme="dark"] .table-dark-card thead {
            background: linear-gradient(180deg, #1e293b, #111827);
        }
        
        [data-bs-theme="dark"] .table-dark-card thead th {
            color: #f9fafb;
            border-bottom: 1px solid #374151;
        }

        [data-bs-theme="dark"] .table-dark-card tbody tr {
            background: #111827;
        }
        
        [data-bs-theme="dark"] .table-dark-card tbody tr:nth-child(even) {
            background: #1a2234;
        }
        
        [data-bs-theme="dark"] .table-dark-card tbody tr:hover {
            background: #1f2937;
        }
        
        [data-bs-theme="dark"] .table-dark-card td {
            border-bottom: 1px solid #1f2937;
        }

        [data-bs-theme="dark"] .btn-more {
            border: 1px solid #374151;
            color: #93c5fd;
        }
        
        [data-bs-theme="dark"] .btn-more:hover {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

        /* Light mode pagination */
        .pagination-dark {
            display: flex;
            justify-content: center;
            margin-top: 12px;
            gap: 4px;
        }
        
        .pagination-dark button {
            background: #f9fafb;
            border: 1px solid #e5e7eb;
            color: #111827;
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
        }
        
        .pagination-dark button.active {
            background: #10b981;
            border-color: #10b981;
            color: #fff;
        }
        
        .pagination-dark button:hover:not(.active) {
            background: #2563eb;
            border-color: #2563eb;
            color: #fff;
        }

        /* Dark mode pagination */
        [data-bs-theme="dark"] .pagination-dark button {
            background: #1e293b;
            border: 1px solid #374151;
            color: #f9fafb;
        }
        
        [data-bs-theme="dark"] .pagination-dark button.active {
            background: #10b981;
            border-color: #10b981;
        }
        
        [data-bs-theme="dark"] .pagination-dark button:hover:not(.active) {
            background: #2563eb;
            border-color: #2563eb;
        }
        
        /* Modal header styling - using project's primary color */
        .modal-header {
            background-color: #1ab394; /* Project's primary color */
            color: white;
            border-bottom: 1px solid #16987e;
        }
        
        /* Modal title styling */
        .modal-header .modal-title {
            font-weight: 500;
            color: white;
        }
        
        /* Close button styling for modal headers */
        .modal-header .btn-close {
            filter: invert(1) grayscale(100%) brightness(200%);
        }
        
        /* Modal footer styling - using a lighter shade */
        .modal-footer {
            background-color: #f0f8f8; /* Light teal background */
            border-top: 1px solid #d1e8e8;
        }
        
        /* Primary buttons in modals */
        .modal-footer .btn-primary {
            background-color: #1ab394;
            border-color: #1ab394;
        }
        
        .modal-footer .btn-primary:hover {
            background-color: #16987e;
            border-color: #16987e;
        }
        
        /* Form styling */
        .v-section {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid #e9ecef;
        }
        
        [data-bs-theme="dark"] .v-section {
            background: #1e1f27;
            border-color: #293036;
        }
        
        .v-cap {
            font-weight: 600;
            margin-bottom: 15px;
            color: #495057;
            font-size: 16px;
        }
        
        [data-bs-theme="dark"] .v-cap {
            color: #aab8c5;
        }
        
        .v-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: #495057;
        }
        
        [data-bs-theme="dark"] .v-label {
            color: #aab8c5;
        }
        
        .v-req {
            color: #e02d2d;
        }
        
        .v-input, .v-select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ced4da;
            border-radius: 4px;
            background-color: #fff;
            color: #495057;
        }
        
        [data-bs-theme="dark"] .v-input, 
        [data-bs-theme="dark"] .v-select {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        .v-input:focus, .v-select:focus {
            border-color: #1ab394;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(26, 179, 148, 0.25);
        }
        
        .note-highlight {
            background-color: #e7f4f0;
            border-left: 3px solid #1ab394;
            padding: 8px 12px;
            margin-top: 5px;
            font-size: 13px;
            border-radius: 0 4px 4px 0;
        }
        
        [data-bs-theme="dark"] .note-highlight {
            background-color: #1e3a35;
            border-left-color: #1ab394;
            color: #aab8c5;
        }
        
        /* Fix for bootstrap-select dropdown shaking issue */
        .bootstrap-select .dropdown-menu {
            transform: translate3d(0, 0, 0) !important;
            -webkit-transform: translate3d(0, 0, 0) !important;
            -moz-transform: translate3d(0, 0, 0) !important;
            -ms-transform: translate3d(0, 0, 0) !important;
            -o-transform: translate3d(0, 0, 0) !important;
            backface-visibility: hidden;
            -webkit-backface-visibility: hidden;
        }
        
        /* Bootstrap Select Dropdown z-index fix */
        .bootstrap-select .dropdown-menu {
            z-index: 20000;
        }
        
        /* Flatpickr calendar z-index fix */
        .flatpickr-calendar {
            z-index: 200000 !important;
        }
        
        /* Allow text wrapping in table cells to prevent horizontal scrolling */
        #categoriesTable td {
            white-space: normal !important;
            word-wrap: break-word;
        }
        
        #categoriesTable th {
            white-space: normal !important;
            word-wrap: break-word;
        }
        
        /* Remove table responsive wrapper horizontal scrolling */
        .table-responsive {
            overflow-x: hidden;
        }
        
        /* Fix for dropdown positioning - remove overflow constraints */
        #filterSection, .card, .table-responsive {
            overflow: visible !important;
        }
        
        /* Style for readonly input fields in view modal */
        #viewCategoryModal .form-control[readonly] {
            background-color: #f8f9fa;
            border-color: #e9ecef;
            color: #495057;
            opacity: 1;
        }
        
        [data-bs-theme="dark"] #viewCategoryModal .form-control[readonly] {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        /* Style for checkboxes in table */
        .table th input[type="checkbox"],
        .table td input[type="checkbox"] {
            margin: 0;
            vertical-align: middle;
        }
        
        /* Style for select all checkbox in header */
        #selectAll {
            transform: scale(1.2);
        }
        
        /* Bootstrap Select RTL Support */
        .bootstrap-select .dropdown-menu {
            text-align: right;
        }
        
        /* Additional enhancements for better visibility in both modes */
        .bootstrap-select.btn-group .dropdown-toggle .filter-option {
            color: inherit;
        }
        
        .bootstrap-select .dropdown-menu li a span.text {
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        [data-bs-theme="dark"] .bootstrap-select .dropdown-header {
            color: #aab8c5;
            background-color: #1e1f27;
        }
        
        .bootstrap-select .dropdown-header {
            background-color: #f8f9fa;
            color: #495057;
        }
        
        /* Fix for select arrow in dark mode */
        [data-bs-theme="dark"] .bootstrap-select .dropdown-toggle::after {
            border-top-color: #aab8c5;
        }
        
        /* Ensure proper contrast for disabled options */
        .bootstrap-select .dropdown-menu > .disabled > a {
            color: #6c757d;
            background-color: transparent;
        }
        
        [data-bs-theme="dark"] .bootstrap-select .dropdown-menu > .disabled > a {
            color: #6c757d;
        }
        
        /* Fix for select text visibility in dark mode modals */
        [data-bs-theme="dark"] .modal-content .bootstrap-select .filter-option {
            color: #aab8c5;
        }
        
        .modal-content .bootstrap-select .filter-option {
            color: #495057;
        }
        
        /* Additional fixes for select box visibility */
        .modal-content .selectpicker {
            width: 100%;
        }
        
        [data-bs-theme="dark"] .modal-content .selectpicker {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        /* View Category Modal specific styling */
        .form-control-plaintext {
            color: #495057;
            border: none;
            background-color: transparent;
            padding: 8px 12px;
        }
        
        [data-bs-theme="dark"] .form-control-plaintext {
            color: #aab8c5;
        }
        
        /* Card styling in View Category Modal */
        .card {
            border-radius: 8px;
            overflow: hidden;
        }
        
        .card-header {
            font-weight: 600;
        }
        
        [data-bs-theme="dark"] .card {
            background-color: #1e1f27;
            border-color: #293036;
        }
        
        [data-bs-theme="dark"] .card-header {
            background-color: #1e1f27;
            border-color: #293036;
        }
        
        /* DataTables Buttons Styling */
        .dt-buttons .btn {
            margin-right: 5px;
            margin-bottom: 5px;
        }
        
        .dt-button-collection {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 6px 12px rgba(0,0,0,.175);
        }
        
        [data-bs-theme="dark"] .dt-button-collection {
            background-color: #1e1f27;
            border: 1px solid #293036;
            box-shadow: 0 6px 12px rgba(0,0,0,.4);
        }
        
        .dt-button-collection .dropdown-item {
            padding: 8px 15px;
        }
        
        [data-bs-theme="dark"] .dt-button-collection .dropdown-item {
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] .dt-button-collection .dropdown-item:hover {
            background-color: #16987e;
            color: #fff;
        }
        
        /* Ensure buttons are visible in both modes */
        .dt-buttons .btn-outline-secondary {
            color: #6c757d;
            border-color: #6c757d;
        }
        
        .dt-buttons .btn-outline-secondary:hover {
            background-color: #6c757d;
            color: #fff;
        }
        
        [data-bs-theme="dark"] .dt-buttons .btn-outline-secondary {
            color: #aab8c5;
            border-color: #aab8c5;
        }
        
        [data-bs-theme="dark"] .dt-buttons .btn-outline-secondary:hover {
            background-color: #16987e;
            color: #fff;
            border-color: #16987e;
        }
        
        /* DataTables buttons container styling */
        #datatables-buttons-container .dt-buttons {
            display: inline-block;
            margin-right: 5px;
        }
        
        #datatables-buttons-container .btn {
            margin-right: 5px;
            margin-bottom: 0;
        }
        
        /* Bootstrap Select Styling for Filter Section */
        .bootstrap-select .dropdown-menu {
            max-height: 200px;
        }
        
        .bootstrap-select .dropdown-toggle {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
        
        [data-bs-theme="dark"] .bootstrap-select .dropdown-toggle {
            background-color: #272832;
            border-color: #293036;
            color: #aab8c5;
        }
        
        [data-bs-theme="dark"] .bootstrap-select .dropdown-toggle:focus {
            border-color: #16987e;
            box-shadow: 0 0 0 0.2rem rgba(22, 152, 126, 0.25);
        }
        
        /* خلفية قسم الفلترة - الوضع النهاري */
        #filterSection {
            background-color: #ffffff;   /* أبيض نقاء */
            border-radius: 10px;
            padding: 16px;
            border: 1px solid #e5e7eb;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }
        
        /* حقول الإدخال - الوضع النهاري */
        #filterSection .form-control {
            background-color: #ffffff;   /* أبيض */
            border: 1px solid #d1d5db;   /* حدود رمادية فاتحة */
            color: #111827;              /* خط داكن */
            border-radius: 6px;
            padding: 8px 10px;
            transition: all 0.2s ease-in-out;
            font-weight: 500;
        }
        
        /* عند التركيز - الوضع النهاري */
        #filterSection .form-control:focus {
            background-color: #ffffff;
            border-color: #1ab394;       /* أخضر سماوي */
            box-shadow: 0 0 0 0.25rem rgba(26, 179, 148, 0.2);
            color: #111827;
        }
        
        /* Placeholder - الوضع النهاري */
        #filterSection .form-control::placeholder {
            color: #9ca3af; /* رمادي فاتح */
            opacity: 1;
        }
        
        /* الأزرار - الوضع النهاري */
        #filterSection .btn {
            border-radius: 6px;
            font-weight: 600;
            transition: all 0.2s ease-in-out;
            padding: 6px 12px;
        }
        
        /* زر أساسي (بحث مثلاً) - الوضع النهاري */
        #filterSection .btn-primary {
            background-color: #1ab394; /* أخضر سماوي */
            border: none;
            color: #fff;
        }
        #filterSection .btn-primary:hover {
            background-color: #16987e;
        }
        
        /* زر ثانوي - الوضع النهاري */
        #filterSection .btn-secondary {
            background-color: #6b7280; /* رمادي متوسط */
            border: none;
            color: #fff;
        }
        #filterSection .btn-secondary:hover {
            background-color: #4b5563;
        }
        
        /* زر معلومات - الوضع النهاري */
        #filterSection .btn-info {
            background-color: #3b82f6; /* أزرق سماوي */
            border: none;
            color: #fff;
        }
        #filterSection .btn-info:hover {
            background-color: #2563eb;
        }
        
        /* زر نجاح - الوضع النهاري */
        #filterSection .btn-success {
            background-color: #10b981; /* أخضر سعادة */
            border: none;
            color: #fff;
        }
        #filterSection .btn-success:hover {
            background-color: #059669;
        }
        
        /* خلفية قسم الفلترة - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection {
            background-color: #111827;   /* غامق أنعم */
            border-radius: 10px;
            padding: 16px;
        }
        
        /* حقول الإدخال - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .form-control {
            background-color: #1f2937;   /* رمادي داكن ناعم */
            border: 1px solid #374151;   /* حدود أنعم */
            color: #f3f4f6;              /* خط فاتح */
            border-radius: 6px;
            padding: 8px 10px;
            transition: all 0.2s ease-in-out;
        }
        
        /* عند التركيز - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .form-control:focus {
            background-color: #111827;   /* يغمق قليلاً */
            border-color: #06b6d4;       /* أزرق سماوي */
            box-shadow: 0 0 6px rgba(6, 182, 212, 0.4);
            color: #fff;
        }
        
        /* Placeholder - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .form-control::placeholder {
            color: #9ca3af; /* رمادي فاتح */
            opacity: 0.85;
        }
        
        /* الأزرار - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .btn {
            border-radius: 6px;
            font-weight: 500;
            transition: all 0.2s ease-in-out;
        }
        
        /* زر أساسي (بحث مثلاً) - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .btn-primary {
            background-color: #06b6d4; /* أزرق سماوي */
            border: none;
            color: #fff;
        }
        [data-bs-theme="dark"] #filterSection .btn-primary:hover {
            background-color: #0891b2;
        }
        
        /* زر ثانوي - الوضع المظلم */
        [data-bs-theme="dark"] #filterSection .btn-secondary {
            background-color: #374151; /* رمادي متوسط */
            border: none;
            color: #e5e7eb;
        }
        [data-bs-theme="dark"] #filterSection .btn-secondary:hover {
            background-color: #4b5563;
        }
        
        /* Fix for DataTables column selection - remove ALL selection effects */
        table.dataTable tbody > tr.selected,
        table.dataTable tbody > tr > .selected,
        table.dataTable tbody > tr.selected > td,
        table.dataTable tbody > tr > .selected > td {
            background-color: transparent !important;
            outline: none !important;
            box-shadow: none !important;
        }
        
        table.dataTable.stripe tbody > tr.odd.selected,
        table.dataTable.stripe tbody > tr.odd > .selected,
        table.dataTable.display tbody > tr.odd.selected,
        table.dataTable.display tbody > tr.odd > .selected,
        table.dataTable.stripe tbody > tr.odd.selected > td,
        table.dataTable.stripe tbody > tr.odd > .selected > td,
        table.dataTable.display tbody > tr.odd.selected > td,
        table.dataTable.display tbody > tr.odd > .selected > td {
            background-color: #f9fafb !important;
        }
        
        [data-bs-theme="dark"] table.dataTable.stripe tbody > tr.odd.selected,
        [data-bs-theme="dark"] table.dataTable.stripe tbody > tr.odd > .selected,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.odd.selected,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.odd > .selected,
        [data-bs-theme="dark"] table.dataTable.stripe tbody > tr.odd.selected > td,
        [data-bs-theme="dark"] table.dataTable.stripe tbody > tr.odd > .selected > td,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.odd.selected > td,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.odd > .selected > td {
            background-color: #1a2234 !important;
        }
        
        table.dataTable tbody > tr.even.selected,
        table.dataTable tbody > tr.even > .selected,
        table.dataTable.display tbody > tr.even.selected,
        table.dataTable.display tbody > tr.even > .selected,
        table.dataTable tbody > tr.even.selected > td,
        table.dataTable tbody > tr.even > .selected > td,
        table.dataTable.display tbody > tr.even.selected > td,
        table.dataTable.display tbody > tr.even > .selected > td {
            background-color: #ffffff !important;
        }
        
        [data-bs-theme="dark"] table.dataTable tbody > tr.even.selected,
        [data-bs-theme="dark"] table.dataTable tbody > tr.even > .selected,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.even.selected,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.even > .selected,
        [data-bs-theme="dark"] table.dataTable tbody > tr.even.selected > td,
        [data-bs-theme="dark"] table.dataTable tbody > tr.even > .selected > td,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.even.selected > td,
        [data-bs-theme="dark"] table.dataTable.display tbody > tr.even > .selected > td {
            background-color: #111827 !important;
        }
        
        /* Remove ALL focus and hover effects on table headers */
        table.dataTable thead th,
        table.dataTable thead td {
            outline: none !important;
            box-shadow: none !important;
        }
        
        table.dataTable thead th:focus,
        table.dataTable thead td:focus,
        table.dataTable thead th:active,
        table.dataTable thead td:active {
            outline: none !important;
            box-shadow: none !important;
            background-color: inherit !important;
        }
        
        /* Remove ALL focus and hover effects on table cells */
        table.dataTable tbody td,
        table.dataTable tbody th {
            outline: none !important;
            box-shadow: none !important;
        }
        
        table.dataTable tbody td:focus,
        table.dataTable tbody th:focus,
        table.dataTable tbody td:active,
        table.dataTable tbody th:active {
            outline: none !important;
            box-shadow: none !important;
            background-color: inherit !important;
        }
        
        /* Remove column sorting arrows highlight */
        table.dataTable thead .sorting,
        table.dataTable thead .sorting_asc,
        table.dataTable thead .sorting_desc,
        table.dataTable thead .sorting_asc_disabled,
        table.dataTable thead .sorting_desc_disabled {
            outline: none !important;
            box-shadow: none !important;
        }
        
        /* Remove any selection background */
        table.dataTable tbody tr:hover,
        table.dataTable tbody tr:hover td {
            background-color: inherit !important;
        }
        
        /* Ensure our custom hover still works */
        .table-dark-card tbody tr:hover {
            background: #f3f4f6 !important;
        }
        
        [data-bs-theme="dark"] .table-dark-card tbody tr:hover {
            background: #1f2937 !important;
        }
        
        /* Bootstrap Select Dropdown z-index fix */
        .bootstrap-select .dropdown-menu {
            z-index: 20000;
        }
        
        /* Flatpickr calendar z-index fix */
        .flatpickr-calendar {
            z-index: 200000 !important;
        }
        
        /* Allow text wrapping in table cells to prevent horizontal scrolling */
        #categoriesTable td {
            white-space: normal !important;
            word-wrap: break-word;
        }
        
        #categoriesTable th {
            white-space: normal !important;
            word-wrap: break-word;
        }
        
        /* Remove table responsive wrapper horizontal scrolling */
        .table-responsive {
            overflow-x: hidden;
        }
        
        /* Fix for dropdown positioning - remove overflow constraints */
        #filterSection, .card, .table-responsive {
            overflow: visible !important;
        }
        
        /* Style for disabled top action buttons */
        .btn-outline-primary.disabled,
        .btn-outline-info.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        /* CKEditor validation styles */
        .ck-editor.is-invalid .ck-editor__editable {
            border-color: #e02d2d !important;
            box-shadow: 0 0 0 0.2rem rgba(224, 45, 45, 0.25) !important;
        }
    </style>
}

<!-- Filter toggle button -->
<div class="mb-2">
    <button id="toggleFilters" type="button" class="btn btn-primary">
        <i class="ti ti-filter-off me-1"></i><span id="toggleFiltersText">إظهار الفلترة</span>
    </button>
</div>

<!-- Filter section -->
<div class="card mb-3" id="filterSection" style="display: none;">
    <div class="card-body p-2">
        <!-- Filter fields in grid layout (side by side) -->
        <div class="row g-2 mb-2">
            <div class="col-md">
                <input type="text" class="form-control form-control-sm" placeholder="الرقم" id="filter-id">
            </div>
            <div class="col-md">
                <input type="text" class="form-control form-control-sm" placeholder="اسم الترحيل" id="filter-transfer-name">
            </div>
            <div class="col-md">
                <input type="text" class="form-control form-control-sm" placeholder="الوصف" id="filter-description">
            </div>
            <div class="col-md">
                <select class="selectpicker form-control form-control-sm" id="filter-records" data-live-search="true" title="اختر السجلات">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </div>
        </div>
        
        <!-- Unified action buttons -->
        <div class="row g-2">
            <div class="col">
                <button type="button" class="btn btn-secondary btn-sm" id="resetFilters">إعادة تعيين</button>
                <button type="button" class="btn btn-primary btn-sm" id="applyFilters">بحث</button>
                <!-- DataTables buttons will be inserted here by JavaScript -->
                <div class="d-inline-block" id="datatables-buttons-container"></div>
            </div>
        </div>
    </div>
</div>

<!-- Action buttons -->
<div class="mb-3">
    <div class="d-flex gap-2 flex-wrap">
        <a href="#" class="btn btn-sm btn-outline-danger" title="حذف">
            <i class="ti ti-trash"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-success" title="إضافة" data-bs-toggle="modal" data-bs-target="#addTransferModal">
            <i class="ti ti-plus"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-primary" title="تعديل" id="topEditButton">
            <i class="ti ti-pencil"></i>
        </a>
        <a href="#" class="btn btn-sm btn-outline-info" title="مشاهدة" id="topViewButton">
            <i class="ti ti-eye"></i>
        </a>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <div class="d-flex align-items-center">
            <h5 class="card-title mb-0 fw-bold">@ViewData["Title"]</h5>
            <div class="me-auto">
                <!-- Refresh button -->
                <button type="button" class="btn btn-sm btn-outline-secondary ms-2" id="refreshBtn" title="تحديث">
                    <i class="ti ti-refresh"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="categoriesTable" class="table table-striped table-bordered dt-responsive nowrap w-100">
                <thead>
                    <tr>
                        <th class="text-center" width="40px">
                            <div class="form-check"><input type="checkbox" class="form-check-input" id="selectAll"></div>
                        </th>
                        <th>الرقم</th>
                        <th>اسم الترحيل</th>
                        <th>الوصف</th>
                        <th>تاريخ الإنشاء</th>
                        <th>تم التحديث</th>
                        <th style="width: 100px; text-align: center;">المزيد</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transfer in Model.MonthlyTransfers)
                    {
                    <tr>
                        <td class="text-center">
                            <div class="form-check"><input type="checkbox" class="form-check-input category-checkbox" value="@transfer.Id"></div>
                        </td>
                        <td>@transfer.Id</td>
                        <td>@transfer.TransferName</td>
                        <td>@transfer.Description</td>
                        <td>@transfer.CreateDate.ToString("yyyy-MM-dd")</td>
                        <td>@transfer.UpdateDate.ToString("yyyy-MM-dd")</td>
                        <td style="text-align: center;">
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    للمزيد
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="#" data-action="edit"><i class="ti ti-pencil me-1"></i> تعديل</a></li>
                                    <li><a class="dropdown-item" href="#" data-action="view"><i class="ti ti-eye me-1"></i> مشاهدة</a></li>
                                    <li><a class="dropdown-item" href="#"><i class="ti ti-trash me-1"></i> حذف</a></li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add Transfer Modal -->
<div class="modal fade" id="addTransferModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable">
    <div class="modal-content" dir="rtl">

      <!-- الهيدر -->
      <div class="modal-header">
        <h5 class="modal-title">دليل البيانات &gt; الترحيل الشهري</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="اغلاق"></button>
      </div>

      <!-- النموذج -->
      <form id="addTransferForm">
        <div class="modal-body">
          <div class="container-fluid">
            <div class="row">
              <!-- Left Column -->
              <div class="col-md-6">
                <!-- اسم الترحيل* -->
                <div class="mb-3">
                  <label for="transferName" class="form-label fw-bold">اسم الترحيل <span class="text-danger">*</span></label>
                  <input type="text" id="transferName" name="transferName" class="form-control" placeholder="اسم الترحيل" required>
                </div>

                <!-- الوصف* -->
                <div class="mb-3">
                  <label for="description" class="form-label fw-bold">الوصف <span class="text-danger">*</span></label>
                  <textarea id="description" name="description" class="form-control" rows="5" placeholder="الوصف" required></textarea>
                </div>
              </div>

              <!-- Right Column -->
              <div class="col-md-6">
                <!-- الحالة -->
                <div class="mb-3">
                  <label class="form-label fw-bold">الحالة</label>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="status" id="statusActive" value="1" checked>
                    <label class="form-check-label" for="statusActive">نشط</label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="status" id="statusInactive" value="0">
                    <label class="form-check-label" for="statusInactive">غير نشط</label>
                  </div>
                </div>

                <!-- ملاحظات -->
                <div class="mb-3">
                  <label for="notes" class="form-label fw-bold">ملاحظات</label>
                  <textarea id="notes" name="notes" class="form-control" rows="5" placeholder="ملاحظات"></textarea>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- الفوتر -->
        <div class="modal-footer">
          <small class="text-muted me-auto">الحقول بعلامة <span class="v-req">*</span> مطلوبة</small>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
          <button type="submit" class="btn btn-primary">
            <i class="ti ti-check me-1"></i>حفظ
          </button>
        </div>
      </form>

    </div>
  </div>
</div>

<!-- Edit Transfer Modal -->
<div class="modal fade" id="editTransferModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable">
    <div class="modal-content" dir="rtl">

      <!-- الهيدر -->
      <div class="modal-header">
        <h5 class="modal-title">دليل البيانات &gt; الترحيل الشهري</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="اغلاق"></button>
      </div>

      <!-- النموذج -->
      <form id="editTransferForm">
        <div class="modal-body">
          <div class="container-fluid">
            <div class="row">
              <!-- Left Column -->
              <div class="col-md-6">
                <!-- اسم الترحيل* -->
                <div class="mb-3">
                  <label for="editTransferName" class="form-label fw-bold">اسم الترحيل <span class="text-danger">*</span></label>
                  <input type="text" id="editTransferName" name="transferName" class="form-control" placeholder="اسم الترحيل" value="الترحيل الشهري الأساسي" required>
                </div>

                <!-- الوصف* -->
                <div class="mb-3">
                  <label for="editDescription" class="form-label fw-bold">الوصف <span class="text-danger">*</span></label>
                  <textarea id="editDescription" name="description" class="form-control" rows="5" placeholder="الوصف" required>تحديد الحد الأقصى للترحيل الشهري الأساسي</textarea>
                </div>
              </div>

              <!-- Right Column -->
              <div class="col-md-6">
                <!-- الحالة -->
                <div class="mb-3">
                  <label class="form-label fw-bold">الحالة</label>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="editStatus" id="editStatusActive" value="1" checked>
                    <label class="form-check-label" for="editStatusActive">نشط</label>
                  </div>
                  <div class="form-check">
                    <input class="form-check-input" type="radio" name="editStatus" id="editStatusInactive" value="0">
                    <label class="form-check-label" for="editStatusInactive">غير نشط</label>
                  </div>
                </div>

                <!-- ملاحظات -->
                <div class="mb-3">
                  <label for="editNotes" class="form-label fw-bold">ملاحظات</label>
                  <textarea id="editNotes" name="notes" class="form-control" rows="5" placeholder="ملاحظات"></textarea>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- الفوتر -->
        <div class="modal-footer">
          <small class="text-muted me-auto">الحقول بعلامة <span class="v-req">*</span> مطلوبة</small>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
          <button type="submit" class="btn btn-primary">
            <i class="ti ti-check me-1"></i>حفظ
          </button>
        </div>
      </form>

    </div>
  </div>
</div>

<!-- View Transfer Modal -->
<div class="modal fade" id="viewTransferModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable">
    <div class="modal-content" dir="rtl">

      <!-- الهيدر -->
      <div class="modal-header">
        <h5 class="modal-title">دليل البيانات &gt; الترحيل الشهري</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="اغلاق"></button>
      </div>

      <!-- النموذج -->
      <div class="modal-body">
        <div class="container-fluid">
          <div class="row">
            <!-- Left Column -->
            <div class="col-md-6">
              <div class="v-section">
                <div class="v-cap">معلومات الترحيل</div>
                <div class="row g-3">
                  <div class="col-md-12">
                    <label class="v-label">الرقم</label>
                    <div class="form-control-plaintext" id="viewId"></div>
                  </div>
                  
                  <div class="col-md-12">
                    <label class="v-label">اسم الترحيل</label>
                    <div class="form-control-plaintext" id="viewTransferName"></div>
                  </div>
                  
                  <div class="col-md-12">
                    <label class="v-label">الوصف</label>
                    <div class="form-control-plaintext" id="viewDescription"></div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Right Column -->
            <div class="col-md-6">
              <div class="v-section">
                <div class="v-cap">تفاصيل إضافية</div>
                <div class="row g-3">
                  <div class="col-md-12">
                    <label class="v-label">تاريخ الإنشاء</label>
                    <div class="form-control-plaintext" id="viewCreateDate"></div>
                  </div>
                  
                  <div class="col-md-12">
                    <label class="v-label">تم التحديث</label>
                    <div class="form-control-plaintext" id="viewUpdateDate"></div>
                  </div>
                  
                  <div class="col-md-12">
                    <label class="v-label">الحالة</label>
                    <div class="form-control-plaintext" id="viewStatus"></div>
                  </div>
                  
                  <div class="col-md-12">
                    <label class="v-label">ملاحظات</label>
                    <div class="form-control-plaintext" id="viewNotes"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- الفوتر -->
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
        <button type="button" class="btn btn-primary" id="editFromViewBtn">
          <i class="ti ti-pencil me-1"></i>تعديل
        </button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
    <!-- jstree js -->
    <script src="~/plugins/jstree/jstree.min.js"></script>
    <!-- date range picker js -->
    <script src="~/plugins/daterangepicker/moment.min.js"></script>
    <script src="~/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- DataTables Js -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.5.0/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.5.0/js/responsive.bootstrap5.min.js"></script>
    <!-- DataTables Buttons Extension -->
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.colVis.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    
    <!-- bootstrap-select js -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.14.0-beta3/dist/js/bootstrap-select.min.js"></script>

    <script>
        $(function () {
            // Variable to track the currently selected row
            let selectedRow = null;
            
            // Initialize DataTable
            const dt = $("#categoriesTable").DataTable({
                paging: true,
                lengthChange: false,
                searching: false,
                ordering: true,
                info: true,
                autoWidth: false,
                responsive: true,
                // Define columns to match the new table structure
                columnDefs: [
                    { targets: 0, width: "40px", className: "text-center" }, // Checkbox column
                    { targets: 1, width: "auto" }, // ID column
                    { targets: 2, width: "auto" }, // Transfer name column
                    { targets: 3, width: "auto" }, // Description column
                    { targets: 4, width: "auto" }, // Create date column
                    { targets: 5, width: "auto" }, // Update date column
                    { targets: 6, width: "100px", className: "text-center" } // Actions column
                ],
                // Add buttons extension
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'print',
                        text: 'طباعه',
                        className: 'btn btn-outline-secondary btn-sm',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'colvis',
                        text: 'تحديد الحقول',
                        className: 'btn btn-outline-secondary btn-sm',
                        collectionLayout: 'fixed two-column',
                        postfixButtons: ['colvisRestore']
                    },
                    {
                        extend: 'excelHtml5',
                        text: 'تصدير اكسل',
                        className: 'btn btn-outline-secondary btn-sm',
                        exportOptions: {
                            columns: ':visible'
                        }
                    }
                ],
                language: {
                    "sEmptyTable":     "لا توجد بيانات",
                    "sInfo":           "إظهار _START_ إلى _END_ من _TOTAL_ سجل",
                    "sInfoEmpty":      "إظهار 0 إلى 0 من 0 سجل",
                    "sInfoFiltered":   "(مفلتر من _MAX_ سجل)",
                    "sInfoPostFix":    "",
                    "sInfoThousands":  ",",
                    "sLengthMenu":     "أظهر _MENU_ سجل",
                    "sLoadingRecords": "جارٍ التحميل...",
                    "sProcessing":     "جارٍ التحميل...",
                    "sSearch":         "ابحث:",
                    "sZeroRecords":    "لم يعثر على أية سجلات",
                    "oPaginate": {
                        "sFirst":    "الأولى",
                        "sLast":     "الأخيرة",
                        "sNext":     "التالي",
                        "sPrevious": "السابق"
                    },
                    "oAria": {
                        "sSortAscending":  ": تفعيل لترتيب العمود تصاعدياً",
                        "sSortDescending": ": تفعيل لترتيب العمود تنازلياً"
                    },
                    "buttons": {
                        "colvis": 'تحديد الحقول',
                        "print": 'طباعه',
                        "excel": 'تصدير اكسل'
                    }
                }
            });
            
            // Move buttons to filter section
            dt.buttons().container().appendTo('#datatables-buttons-container');
            
            // Show the filter section buttons container
            $('#datatables-buttons-container').show();
            
            // Toggle filter section
            $('#toggleFilters').click(function() {
                $('#filterSection').slideToggle();
                var icon = $(this).find('i');
                var text = $('#toggleFiltersText');
                if (icon.hasClass('ti-filter-off')) {
                    icon.removeClass('ti-filter-off').addClass('ti-filter');
                    text.text('إخفاء الفلترة');
                } else {
                    icon.removeClass('ti-filter').addClass('ti-filter-off');
                    text.text('إظهار الفلترة');
                }
            });
            
            // Refresh button
            $('#refreshBtn').click(function() {
                location.reload();
            });
            
            // Initialize bootstrap select
            $('.selectpicker').selectpicker();
            
            // Initialize selectpickers in modals when they are shown
            $('#addTransferModal, #editTransferModal').on('shown.bs.modal', function () {
                $('.selectpicker', this).selectpicker('render');
            });
            
            // Select all functionality
            $('#selectAll').on('change', function() {
                $('.category-checkbox').prop('checked', $(this).prop('checked'));
            });
            
            // Individual checkbox functionality
            $('.category-checkbox').on('change', function() {
                if (!$(this).prop('checked')) {
                    $('#selectAll').prop('checked', false);
                } else {
                    if ($('.category-checkbox:checked').length === $('.category-checkbox').length) {
                        $('#selectAll').prop('checked', true);
                    }
                }
            });
            
            // Handle action buttons
            $('#topEditButton').click(function(e) {
                e.preventDefault();
                var checkedBoxes = $('.category-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    alert('الرجاء تحديد ترحيل واحد على الأقل للتعديل');
                    return;
                }
                
                if (checkedBoxes.length > 1) {
                    alert('الرجاء تحديد ترحيل واحد فقط للتعديل');
                    return;
                }
                
                // For now, we'll just edit the first selected item
                var firstChecked = checkedBoxes.first();
                var row = firstChecked.closest('tr');
                if (row.hasClass('child')) {
                    row = row.prev();
                }
                
                // Get row data
                var transferId = firstChecked.val();
                var id = row.find('td:eq(1)').text();
                var transferName = row.find('td:eq(2)').text();
                var description = row.find('td:eq(3)').text();
                var createDate = row.find('td:eq(4)').text();
                var updateDate = row.find('td:eq(5)').text();
                
                // Populate edit modal
                $('#editTransferName').val(transferName);
                $('#editDescription').val(description);
                
                // Show edit modal using Bootstrap 5 method
                var editModalElement = document.getElementById('editTransferModal');
                if (editModalElement) {
                    try {
                        const editModal = new bootstrap.Modal(editModalElement);
                        editModal.show();
                    } catch (error) {
                        console.error('Error showing edit modal:', error);
                        // Fallback to jQuery method
                        $('#editTransferModal').modal('show');
                    }
                }
            });
            
            $('#topViewButton').click(function(e) {
                e.preventDefault();
                var checkedBoxes = $('.category-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    alert('الرجاء تحديد ترحيل واحد على الأقل للمشاهدة');
                    return;
                }
                
                if (checkedBoxes.length > 1) {
                    alert('الرجاء تحديد ترحيل واحد فقط للمشاهدة');
                    return;
                }
                
                // For now, we'll just view the first selected item
                var firstChecked = checkedBoxes.first();
                var row = firstChecked.closest('tr');
                if (row.hasClass('child')) {
                    row = row.prev();
                }
                
                // Get row data
                var transferId = firstChecked.val();
                var id = row.find('td:eq(1)').text();
                var transferName = row.find('td:eq(2)').text();
                var description = row.find('td:eq(3)').text();
                var createDate = row.find('td:eq(4)').text();
                var updateDate = row.find('td:eq(5)').text();
                var notes = ''; // In a real app, this would come from the data
                
                // Populate view modal
                $('#viewId').text(id);
                $('#viewTransferName').text(transferName);
                $('#viewDescription').text(description);
                $('#viewCreateDate').text(createDate);
                $('#viewUpdateDate').text(updateDate);
                $('#viewStatus').text('نشط'); // This would be dynamic in a real app
                $('#viewNotes').text(notes);
                
                // Show view modal using Bootstrap 5 method
                var viewModalElement = document.getElementById('viewTransferModal');
                if (viewModalElement) {
                    try {
                        const viewModal = new bootstrap.Modal(viewModalElement);
                        viewModal.show();
                    } catch (error) {
                        console.error('Error showing view modal:', error);
                        // Fallback to jQuery method
                        $('#viewTransferModal').modal('show');
                    }
                }
            });
            
            // Handle dropdown actions
            $('#categoriesTable').on('click', '[data-action]', function(e) {
                e.preventDefault();
                e.stopPropagation(); // Prevent event bubbling
                
                var action = $(this).data('action');
                var row = $(this).closest('tr');
                if (row.hasClass('child')) {
                    row = row.prev();
                }
                
                // Get row data
                var transferId = row.find('.category-checkbox').val();
                var id = row.find('td:eq(1)').text();
                var transferName = row.find('td:eq(2)').text();
                var description = row.find('td:eq(3)').text();
                var createDate = row.find('td:eq(4)').text();
                var updateDate = row.find('td:eq(5)').text();
                var notes = ''; // In a real app, this would come from the data
                
                console.log('Action triggered:', action);
                console.log('Transfer ID:', id);
                console.log('Transfer Name:', transferName);
                
                if (action === 'view') {
                    // Check if modal exists
                    var viewModalElement = document.getElementById('viewTransferModal');
                    if (!viewModalElement) {
                        console.error('View modal not found!');
                        alert('خطأ: نافذة العرض غير موجودة');
                        return;
                    }
                    
                    // Populate view modal
                    $('#viewId').text(id);
                    $('#viewTransferName').text(transferName);
                    $('#viewDescription').text(description);
                    $('#viewCreateDate').text(createDate);
                    $('#viewUpdateDate').text(updateDate);
                    $('#viewStatus').text('نشط'); // This would be dynamic in a real app
                    $('#viewNotes').text(notes);
                    
                    // Debug: Check if elements exist
                    console.log('View transfer ID element exists:', $('#viewId').length > 0);
                    console.log('View transfer name element exists:', $('#viewTransferName').length > 0);
                    
                    // Show view modal using Bootstrap 5 method
                    console.log('Showing view modal');
                    try {
                        const viewModal = new bootstrap.Modal(viewModalElement);
                        viewModal.show();
                    } catch (error) {
                        console.error('Error showing view modal:', error);
                        // Fallback to jQuery method
                        $('#viewTransferModal').modal('show');
                    }
                } else if (action === 'edit') {
                    // Check if modal exists
                    var editModalElement = document.getElementById('editTransferModal');
                    if (!editModalElement) {
                        console.error('Edit modal not found!');
                        alert('خطأ: نافذة التعديل غير موجودة');
                        return;
                    }
                    
                    console.log('Edit modal element found:', editModalElement);
                    
                    // Populate edit modal
                    $('#editTransferName').val(transferName);
                    $('#editDescription').val(description);
                    
                    // Debug: Check if elements exist
                    console.log('Edit transfer name element exists:', $('#editTransferName').length > 0);
                    console.log('Edit description element exists:', $('#editDescription').length > 0);
                    
                    // Show edit modal using Bootstrap 5 method
                    console.log('Showing edit modal');
                    try {
                        const editModal = new bootstrap.Modal(editModalElement);
                        editModal.show();
                        console.log('Edit modal shown successfully');
                    } catch (error) {
                        console.error('Error showing edit modal:', error);
                        // Fallback to jQuery method
                        console.log('Trying jQuery method to show edit modal');
                        $('#editTransferModal').modal('show');
                    }
                } else if (action === 'delete') {
                    // Handle delete action
                    if (confirm('هل أنت متأكد من رغبتك في حذف الترحيل "' + transferName + '"؟')) {
                        console.log('Deleting transfer:', transferName);
                        alert('تم حذف الترحيل "' + transferName + '" بنجاح!');
                        
                        // Remove the row from the table
                        row.fadeOut(300, function() {
                            $(this).remove();
                        });
                    }
                }
            });
            
            // Handle top action buttons
            $('.btn-outline-danger').click(function(e) {
                e.preventDefault();
                var checkedBoxes = $('.category-checkbox:checked');
                if (checkedBoxes.length === 0) {
                    alert('الرجاء تحديد ترحيل واحد على الأقل للحذف');
                    return;
                }
                
                // Get transfer names for confirmation message
                var transferNames = [];
                checkedBoxes.each(function() {
                    var row = $(this).closest('tr');
                    if (row.hasClass('child')) {
                        row = row.prev();
                    }
                    var transferName = row.find('td:eq(2)').text();
                    transferNames.push(transferName);
                });
                
                var message = 'هل أنت متأكد من رغبتك في حذف ' + transferNames.length + ' ترحيل(ترحيلات)؟\n';
                message += transferNames.join('\n');
                
                if (confirm(message)) {
                    // In a real application, you would send an AJAX request to delete the transfers
                    console.log('Deleting transfers:', transferNames);
                    alert('تم حذف ' + transferNames.length + ' ترحيل(ترحيلات) بنجاح!');
                    
                    // Remove the rows from the table
                    checkedBoxes.each(function() {
                        var row = $(this).closest('tr');
                        if (row.hasClass('child')) {
                            row = row.prev();
                        }
                        row.fadeOut(300, function() {
                            $(this).remove();
                        });
                    });
                    
                    // Uncheck select all checkbox
                    $('#selectAll').prop('checked', false);
                }
            });
            
            // Handle form submissions
            $('#addTransferForm').on('submit', function(e) {
                e.preventDefault();
                
                // Get form element
                var form = this;
                
                // Check if form is valid using Bootstrap validation
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                // Add validation classes
                form.classList.add('was-validated');
                
                // If form is valid, proceed with submission
                if (form.checkValidity()) {
                    // In a real application, you would submit the form data via AJAX
                    alert('تم إضافة الترحيل بنجاح!');
                    // Hide modal using Bootstrap 5 method
                    var addModalElement = document.getElementById('addTransferModal');
                    if (addModalElement) {
                        try {
                            const addModal = bootstrap.Modal.getInstance(addModalElement);
                            if (addModal) {
                                addModal.hide();
                            } else {
                                // Fallback to jQuery method
                                $('#addTransferModal').modal('hide');
                            }
                        } catch (error) {
                            console.error('Error hiding add modal:', error);
                            // Fallback to jQuery method
                            $('#addTransferModal').modal('hide');
                        }
                    }
                    form.reset();
                    // Remove validation classes after reset
                    form.classList.remove('was-validated');
                    // Refresh the selectpickers
                    $('.selectpicker').selectpicker('refresh');
                }
            });
            
            $('#editTransferForm').on('submit', function(e) {
                e.preventDefault();
                
                // Get form element
                var form = this;
                
                // Check if form is valid using Bootstrap validation
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                // Add validation classes
                form.classList.add('was-validated');
                
                // If form is valid, proceed with submission
                if (form.checkValidity()) {
                    // In a real application, you would submit the form data via AJAX
                    alert('تم تحديث الترحيل بنجاح!');
                    // Hide modal using Bootstrap 5 method
                    var editModalElement = document.getElementById('editTransferModal');
                    if (editModalElement) {
                        try {
                            const editModal = bootstrap.Modal.getInstance(editModalElement);
                            if (editModal) {
                                editModal.hide();
                            } else {
                                // Fallback to jQuery method
                                $('#editTransferModal').modal('hide');
                            }
                        } catch (error) {
                            console.error('Error hiding edit modal:', error);
                            // Fallback to jQuery method
                            $('#editTransferModal').modal('hide');
                        }
                    }
                    // Remove validation classes after submission
                    form.classList.remove('was-validated');
                    // Refresh the selectpickers
                    $('.selectpicker').selectpicker('refresh');
                }
            });
            
            // Handle reset filters button
            $('#resetFilters').on('click', function() {
                // Reset all filter input fields
                $('#filter-id').val('');
                $('#filter-transfer-name').val('');
                $('#filter-description').val('');
                $('#filter-records').selectpicker('val', '');
                $('.selectpicker').selectpicker('refresh');
                alert('تم إعادة تعيين الفلاتر');
            });
            
            // Handle apply filters button
            $('#applyFilters').on('click', function() {
                alert('تم تطبيق الفلاتر');
                // In a real application, you would filter the DataTable here
            });
            
            // Handle edit from view button
            $('#editFromViewBtn').on('click', function() {
                // Hide the view modal
                var viewModalElement = document.getElementById('viewTransferModal');
                if (viewModalElement) {
                    try {
                        const viewModal = bootstrap.Modal.getInstance(viewModalElement);
                        if (viewModal) {
                            viewModal.hide();
                        } else {
                            // Fallback to jQuery method
                            $('#viewTransferModal').modal('hide');
                        }
                    } catch (error) {
                        console.error('Error hiding view modal:', error);
                        // Fallback to jQuery method
                        $('#viewTransferModal').modal('hide');
                    }
                }
                
                // Show the edit modal
                setTimeout(function() {
                    var editModalElement = document.getElementById('editTransferModal');
                    if (editModalElement) {
                        try {
                            const editModal = new bootstrap.Modal(editModalElement);
                            editModal.show();
                        } catch (error) {
                            console.error('Error showing edit modal:', error);
                            // Fallback to jQuery method
                            $('#editTransferModal').modal('show');
                        }
                    }
                }, 300);
            });
            
            // Handle select all checkbox
            $('#selectAll').on('change', function () {
                const isChecked = $(this).prop('checked');
                $('.category-checkbox').prop('checked', isChecked);
            });
            
            // Handle individual row checkbox changes
            $('#categoriesTable tbody').on('change', '.category-checkbox', function () {
                // Update the main selectAll checkbox state
                if ($('.category-checkbox:checked').length === $('.category-checkbox').length) {
                    $('#selectAll').prop('checked', true);
                } else {
                    $('#selectAll').prop('checked', false);
                }
            });
            
            // Initialize bootstrap-select for category selection with enhanced options
            function initializeSelectPicker() {
                $('.selectpicker').selectpicker({
                    style: 'btn-light',
                    liveSearch: true,
                    liveSearchPlaceholder: 'ابحث...',
                    noneSelectedText: 'لم يتم تحديد أي شيء',
                    noneResultsText: 'لا توجد نتائج لـ {0}',
                    selectAllText: 'تحديد الكل',
                    deselectAllText: 'إلغاء تحديد الكل',
                    dropupAuto: false,   // منع السلوك التلقائي
                    width: '100%',
                    container: 'body'    // إخراج القائمة خارج أي كارد/مودال
                });
            }
            
            // Initialize selectpickers when document is ready
            initializeSelectPicker();
            
            // Re-initialize bootstrap-select when modals are shown or hidden
            $('.modal').on('shown.bs.modal hidden.bs.modal', function () {
                $('.selectpicker').selectpicker('refresh');
            });
        });
    </script>
}